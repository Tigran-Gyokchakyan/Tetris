{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scenes/boot-scene.js","webpack:///./src/constants.js","webpack:///./src/scenes/base-scene.js","webpack:///./src/objects/button.js","webpack:///./src/globals.js","webpack:///./src/strings.js","webpack:///./src/scenes/intro-scene.js","webpack:///./src/objects/block.js","webpack:///./src/objects/game-stage.js","webpack:///./src/objects/nine-slice.js","webpack:///./src/objects/game-left-panel.js","webpack:///./src/objects/game-right-panel.js","webpack:///./src/objects/next-level-animation.js","webpack:///./src/scenes/game-scene.js","webpack:///./src/scenes/end-scene.js","webpack:///./src/game.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","BootScene","this","fontDiv","document","createElement","body","appendChild","forEach","font","div","id","style","fontFamily","position","top","left","opacity","innerHTML","load","multiatlas","json","atlas","audio","sound","add","loop","play","removeChild","scene","stop","start","Phaser","GameScene","scale","on","onResize","gameWidth","game","isLandscape","gameHeight","scaleXRatio","Constants","xRatio","yRatio","scaleRatio","Math","max","gameScale","devicePixelRatio","off","layout","sys","device","os","android","iOS","gameSize","width","height","Button","upStateKey","overStateKey","label","undefined","labelStyle","overState","Image","visible","upState","setSize","setInteractive","Text","setScale","x","displayWidth","y","displayHeight","Container","roundScore","totalScore","round","isGameFinished","isMute","isGamePaused","IntroScene","background","image","platform","setOrigin","existing","gameLogo","hebrewText","kklLogo","tetrisSymbol","titleText","text","bodyText","lineSpacing","bottomText","btnLabelStyle","fontSize","fill","align","fixedWidth","wordWrap","playButton","cleanUp","cameras","main","centerX","topPadding","centerY","abs","isMobile","isDeviceLandscape","layoutMobileLandscape","layoutMobilePortrait","layoutDestop","topAvailableSpace","horizontalPadding","verticalPadding","textWidth","textLineSpacing","title","Strings","setStyle","fontStyle","rtl","fixedHeight","initRTL","setText","BaseScene","Block","GameObjects","texture","normalFrame","correctFrame","wrongFrame","_texture","_normalFrame","_correctFrame","_wrongFrame","_isCorrect","question","column","row","isDropped","_animationSprite","make","sprite","_background","setTexture","setFrame","_wrongFlash","_nameText","_definitionText","term","totalTextHeight","yPos","answer","definition","showWrongFrame","playAnimation","alpha","_wrongTween","destroy","tweens","targets","duration","yoyo","repeat","remove","GameStage","_scale","_isUpdatingLayout","_cellWidth","_cellHeight","_maxColumn","_maxRow","_moveDownInterval","_nextMoveTime","time","now","_currentBlock","_numBlocksDropped","_numCorrectAnswers","_questions","_grid","category","bg","definitionContainer","container","blockContainer","correctSound","wrongSound","questions","Array","GetRandom","indexOf","index","block","tempArray","map","Shuffle","clearMask","rect","graphics","fillRect","geomMask","createGeometryMask","setMask","offsetY","getAll","moveBlock","availableTextHeightSpace","Globals","cell","blocks","nextRound","rnd","Between","answerText","getAt","checkAnswer","animKey","addScore","correctText","find","delayedCall","getIndex","nextBlock","createQuestions","createDefinitions","createBlocks","replayRound","topOffset","containerX","containerY","createMask","layoutBlocks","layoutDefinitions","col","NineSlice","RenderTexture","config","_frame","frame","_sourceWidth","sourceWidth","_sourceHeight","sourceHeight","_top","_right","right","_bottom","bottom","_left","_slice","setSize9Slice","_tl","drawFrame","_l","_bl","_t","_c","_b","_tr","_r","_br","clear","draw","GameLeftPanel","replayRoundBtn","resumeGame","replayGameBtn","replayGame","endGameBtn","endGame","toggleSoundBtn","globals","setMute","pauseGameBtn","gameStage","availableSpace","newWidth","layoutLandscape","newHeight","layoutPortrait","btnVerticalSpacing","btnSpacing","GameRightPanel","dataBg","dataBgSingle","createTexts","downArrowBtn","leftArrowBtn","rightArrowBtn","valueStyle","roundLabel","categoryNameLabel","roundScoreLabel","roundScoreValue","totalScoreLabel","totalScoreValue","topMargin","labelPadding","labelTopMargin","valueTopMargin","dataBgPadding","btnAvailableSpace","btnMargin","labelScale","valueScale","textVerticalSpacing","score","categoryName","totalRounds","NextLevelAnimation","scaleValue","character","bubble","texts","masks","setAngle","scaleX","scaleY","angle","ease","onComplete","addTextAnimation","delay","shape","fillStyle","fillWidth","fillheight","xPos","mask","Display","Masks","GeometryMask","leftPanel","rightPanel","moveBlockLeft","moveBlockRight","moveBlockDown","input","keyboard","questionsData","cache","categories","setRoundDetails","createAnimations","setTimeout","platformScale","nextLevelAnimation","finishAnimation","update","anims","frames","generateFrameNames","prefix","end","zeroPad","setRoundScore","setTotalScore","hide","EndScene","joinUsButton","open","greenwinLinkButton","replayButton","console","log","buttonScale","gameConfig","type","parent","RESIZE","autoCenter","CENTER_BOTH","render","antialias","addEventListener"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1467,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as Phaser from 'phaser';\r\n\r\nexport default class BootScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: 'BootScene',\r\n        });\r\n    }\r\n\r\n    preload() {\r\n        // Preload the fonts\r\n        const fonts = ['Assistant', 'AssistantSemiBold', 'AssistantBold'];\r\n\r\n        this.fontDiv = document.createElement('div');\r\n        document.body.appendChild(this.fontDiv);\r\n\r\n        fonts.forEach(font => {\r\n            const div = document.createElement('div');\r\n            div.id = font;\r\n            div.style.fontFamily = font;\r\n            div.style.position = 'absolute';\r\n            div.style.top = 0;\r\n            div.style.left = 0;\r\n            div.style.opacity = 0.03;\r\n            div.innerHTML = '|MÃ‰qgy';\r\n            this.fontDiv.appendChild(div);\r\n        });\r\n\r\n        // load sprite atlas\r\n        this.load.multiatlas('atlas', 'assets/tetris-atlas.json', 'assets');\r\n\r\n        // load questions data\r\n        this.load.json('questionsData', 'assets/data/questions.json');\r\n\r\n        // load atlas xml\r\n        this.load.atlas('atlasNew', 'assets/tetris-atlas-new.png', 'assets/tetris-atlas-new.json');\r\n\r\n        // load animations\r\n        this.load.atlas('correctFlagAtlas', 'assets/animations/correct_flag.png', 'assets/animations/correct_flag.json');\r\n        this.load.atlas('correctLampAtlas', 'assets/animations/correct_lamp.png', 'assets/animations/correct_lamp.json');\r\n        this.load.atlas('correctLikeAtlas', 'assets/animations/correct_like.png', 'assets/animations/correct_like.json');\r\n        this.load.atlas('correctSmileAtlas', 'assets/animations/correct_smile.png', 'assets/animations/correct_smile.json');\r\n        this.load.atlas('correctStarAtlas', 'assets/animations/correct_star.png', 'assets/animations/correct_star.json');\r\n        this.load.atlas('correctTurbineAtlas', 'assets/animations/correct_turbine.png', 'assets/animations/correct_turbine.json');\r\n        this.load.atlas('finishAtlas', 'assets/animations/finish.png', 'assets/animations/finish.json');\r\n        this.load.atlas('nextLevelAtlas', 'assets/animations/next_level.png', 'assets/animations/next_level.json');\r\n        this.load.atlas('wrongAtlas', 'assets/animations/wrong.png', 'assets/animations/wrong.json');\r\n\r\n        // load audio\r\n        this.load.audio('backgroundMusic', 'assets/audio/040_main_loop.wav');\r\n        this.load.audio('correctBrick', 'assets/audio/right_answer.wav');\r\n        this.load.audio('wrongBrick', 'assets/audio/wrong_answer.wav');\r\n        this.load.audio('gameFinish', 'assets/audio/finish_sound.mp3');\r\n        this.load.audio('nextLevel', 'assets/audio/next_level.wav');\r\n    }\r\n\r\n    update() {\r\n        this.sound.add('backgroundMusic', { loop: true }).play();\r\n\r\n        document.body.removeChild(this.fontDiv);\r\n        this.scene.stop();\r\n        this.scene.start('GameScene');\r\n    }\r\n}\r\n","export default {\n    GAME_DESIGN_WIDTH: 1920,\n    GAME_DESIGN_HEIGHT: 1080,\n    LINK_GREENWIN_KKL: 'https://greenwin.kkl.org.il/tetris/Zionism',\n    LINK_GREENWIN_KKL_JOIN_US: 'https://greenwin.kkl.org.il/contact/join-us/​'\n};\n","import * as Phaser from 'phaser';\nimport Constants from '../constants';\n\nexport default class GameScene extends Phaser.Scene {\n    constructor(key) {\n        super({ key });\n    }\n\n    get isMobile() {\n        return (\n            this.sys.game.device.os.android === true ||\n            this.sys.game.device.os.iOS === true\n        );\n    }\n\n    get gameWidth() {\n        return this.game.scale.gameSize.width;\n    }\n\n    get gameHeight() {\n        return this.game.scale.gameSize.height;\n    }\n\n    get isDeviceLandscape() {\n        return this.game.scale.isLandscape;\n    }\n\n    create() {\n        this.scale.on('resize', this.onResize, this);\n    }\n\n    layout() {\n        const gameWidth = this.game.scale.isLandscape\n            ? this.gameWidth\n            : this.gameHeight;\n        this.scaleXRatio = gameWidth / Constants.GAME_DESIGN_WIDTH;\n\n        const xRatio = this.gameWidth / Constants.GAME_DESIGN_WIDTH;\n        const yRatio = this.gameHeight / Constants.GAME_DESIGN_HEIGHT;\n        const scaleRatio = Math.max(xRatio, yRatio);\n\n        this.scaleRatio = scaleRatio;\n        this.gameScale = devicePixelRatio * scaleRatio;\n    }\n\n    cleanUp() {\n        this.scale.off('resize', this.onResize, this);\n    }\n\n    onResize() {\n        this.layout();\n    }\n}\n","import * as Phaser from 'phaser';\r\n\r\nexport default class Button extends Phaser.GameObjects.Container {\r\n    constructor(scene, upStateKey, overStateKey, label = undefined, labelStyle = undefined) {\r\n        super(scene);\r\n\r\n        this.overState = new Phaser.GameObjects.Image(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            'atlas',\r\n            overStateKey\r\n        );\r\n        this.add(this.overState);\r\n        this.overState.visible = false;\r\n\r\n        this.upState = new Phaser.GameObjects.Image(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            'atlas',\r\n            upStateKey\r\n        );\r\n        this.add(this.upState);\r\n\r\n        this.setSize(this.upState.width, this.upState.height);\r\n        this.setInteractive();\r\n\r\n        if (label !== undefined) {\r\n            this.label = new Phaser.GameObjects.Text(this.scene, 0, 0, label, labelStyle);\r\n            this.add(this.label);\r\n            this.label.setScale(0.5);\r\n\r\n            this.label.x = -this.label.displayWidth * 0.5;\r\n            this.label.y = -this.label.displayHeight * 0.5;\r\n        }\r\n    }\r\n}\r\n","export default {\r\n    roundScore: 0,\r\n    totalScore: 0,\r\n    round: 0,\r\n    isGameFinished: false,\r\n    isMute: false,\r\n    isGamePaused: false\r\n};","export default {\r\n    TEXT_END_SCENE_TITLE: 'כל הכבוד, השלמתם את המשחק בהצלחה!',\r\n    TEXT_END_SCENE_BODY: 'ומה עכשיו? אתם מוזמנים לשחק שוב, ואולי לקבל ניקוד גבוה יותר ומונחים חדשים.',\r\n    TEXT_END_SCENE_BODY_2: 'אתם גם יכולים לשחק במשחקים נוספים באתר \"חלון ירוק לצעירים\" ולהירשם לדיוור שלנו.',\r\n    TEXT_END_SCENE_TITLE_2: 'לא השלמתם את הטטריס? לא נורא...',\r\n    TEXT_END_SCENE_BODY_3: 'שחקו שוב או גלשו באתר \"חלון ירוק לצעירים\" ותיהנו ממשחקים ותכנים נוספים.',\r\n    TEXT_END_SCENE_BODY_4: 'רצוי גם להירשם לדיוור שלנו ולקבל עדכונים על משחקים חדשים ופעילויות.',\r\n    TEXT_INTRO_SCENE_TITLE: 'מושג למושג | משחק טטריס ציונות',\r\n    TEXT_INTRO_SCENE_BODY_1: 'במשחק טטריס ציונות עליכם לכוון את קוביות המונחים שצונחות מטה לבלוק המתאים, להשלים ארבעה סבבים ולצבור את מרב הנקודות.',\r\n    TEXT_INTRO_SCENE_BODY_2: 'הניקוד במשחק הטטריס מצטבר בין הסבבים.',\r\n    TEXT_INTRO_SCENE_BODY_3: 'רוצים לשפר אותו? אין בעיה, שחקו שוב, רק שימו לב שהמושגים עשויים להשתנות.',\r\n    TEXT_INTRO_SCENE_BODY_4: 'אין בעיה, שחקו שוב, רק שימו לב שהשאלות עשויות להשתנות...',\r\n    TEXT_INTRO_LAST_LINE: 'תיהנו!'\r\n};","import BaseScene from './base-scene';\r\nimport Button from '../objects/button';\r\nimport Globals from '../globals';\r\nimport Constants from '../constants';\r\nimport Strings from '../strings';\r\n\r\nexport default class IntroScene extends BaseScene {\r\n    constructor() {\r\n        super('IntroScene');\r\n    }\r\n\r\n    create() {\r\n        super.create();\r\n\r\n        this.background = this.add.image(0, 0, 'atlas', 'bg.png');\r\n\r\n        this.platform = this.add.image(0, 0, 'atlas', 'platform_opening.png');\r\n\r\n        this.platform.setOrigin(0, 0);\r\n        this.add.existing(this.platform);\r\n\r\n        // top elements\r\n        this.gameLogo = this.add.image(0, 0, 'atlas', 'game logo.png');\r\n        this.hebrewText = this.add.image(0, 0, 'atlas', 'hebrew_text.png');\r\n        this.kklLogo = this.add.image(0, 0, 'atlas', 'kkl logo.png');\r\n        this.tetrisSymbol = this.add.image(0, 0, 'atlas', 'tetris symbol.png');\r\n\r\n        // texts\r\n        this.titleText = this.add.text();\r\n        this.titleText.setScale(0.5);\r\n\r\n        this.bodyText = this.add.text();\r\n        this.bodyText.setScale(0.5);\r\n        this.bodyText.lineSpacing = 16;\r\n\r\n        this.bottomText = this.add.text();\r\n        this.bottomText.setScale(0.5);\r\n\r\n        // buttons\r\n        const btnLabelPadding = 8;\r\n        const btnWidth = 156;\r\n        const btnLabelStyle = {\r\n            fontFamily: 'AssistantSemiBold',\r\n            fontSize: '60px',\r\n            fill: '#ffffff',\r\n            align: 'center',\r\n            fixedWidth: (btnWidth - btnLabelPadding * 2) * 2,\r\n            wordWrap: {\r\n                width: (btnWidth - btnLabelPadding * 2) * 2,\r\n            },\r\n        };\r\n\r\n        this.playButton = new Button(\r\n            this,\r\n            'Vector Smart Object.png',\r\n            'Vector Smart Object.png',\r\n            'למשחק',\r\n            btnLabelStyle\r\n        );\r\n        this.add.existing(this.playButton);\r\n        this.playButton.label.y = -this.playButton.displayHeight * 0.42;\r\n        this.playButton.on('pointerup', () => {\r\n            this.cleanUp();\r\n            this.scene.stop();\r\n            this.scene.start('GameScene');\r\n        });\r\n\r\n        this.layout();\r\n    }\r\n\r\n    layout() {\r\n        super.layout();\r\n\r\n        this.background.setScale(this.scaleRatio);\r\n        this.background.x = this.cameras.main.centerX;\r\n\r\n        const topPadding =\r\n            (this.game.scale.gameSize.height - this.background.displayHeight) *\r\n            0.5;\r\n        this.background.y = this.cameras.main.centerY + Math.abs(topPadding);\r\n\r\n        if (this.isMobile) {\r\n            if (this.isDeviceLandscape) {\r\n                this.layoutMobileLandscape();\r\n            } else {\r\n                this.layoutMobilePortrait();\r\n            }\r\n        } else {\r\n            this.layoutDestop();\r\n        }\r\n    }\r\n\r\n    layoutDestop() {\r\n        // platform\r\n        this.platform.displayHeight = this.platform.height * this.scaleRatio;\r\n        this.platform.displayWidth = this.platform.width * this.scaleRatio;\r\n\r\n        this.platform.y = 0;\r\n        this.platform.x = (this.gameWidth - this.platform.displayWidth) * 0.5;\r\n\r\n        // top elements\r\n        const topAvailableSpace = 180 * this.scaleRatio;\r\n        const horizontalPadding = 40 * this.scaleRatio;\r\n        const verticalPadding = 25 * this.scaleRatio;\r\n\r\n        this.gameLogo.setScale(this.scaleRatio);\r\n        this.gameLogo.x =\r\n            this.cameras.main.centerX +\r\n            this.gameLogo.displayWidth * 0.45;\r\n        this.gameLogo.y = this.platform.y + topAvailableSpace * 0.5;\r\n\r\n        this.hebrewText.setScale(this.scaleRatio);\r\n        this.hebrewText.x =\r\n            this.cameras.main.centerX -\r\n            this.hebrewText.displayWidth * 0.65;\r\n        this.hebrewText.y = this.gameLogo.y;\r\n\r\n        this.kklLogo.setScale(this.scaleRatio);\r\n        this.kklLogo.x =\r\n            this.platform.x +\r\n            this.platform.displayWidth -\r\n            this.kklLogo.displayWidth * 0.5 - horizontalPadding;\r\n        this.kklLogo.y = this.platform.y + topAvailableSpace * 0.5;\r\n\r\n        // tetris symbol\r\n        this.tetrisSymbol.setScale(this.scaleRatio);\r\n        this.tetrisSymbol.x = this.platform.x + this.tetrisSymbol.displayWidth * 0.5 + horizontalPadding;\r\n        this.tetrisSymbol.y = this.platform.y + this.platform.displayHeight - this.tetrisSymbol.displayHeight * 0.5 - verticalPadding;\r\n\r\n        // texts\r\n        const textWidth = this.platform.displayWidth - horizontalPadding * 2;\r\n        const textLineSpacing = 12 * this.scaleRatio;\r\n        const title = Strings.TEXT_INTRO_SCENE_TITLE;\r\n\r\n        this.titleText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(68 * this.scaleRatio)}px`,\r\n            fontStyle: 'bold',\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.titleText.initRTL();\r\n        this.titleText.setText(title);\r\n\r\n        this.titleText.x = this.platform.x + this.platform.displayWidth - horizontalPadding;\r\n        this.titleText.y = this.platform.y + topAvailableSpace + verticalPadding;\r\n\r\n        const body = Strings.TEXT_INTRO_SCENE_BODY_1 + '\\n' +\r\n            Strings.TEXT_INTRO_SCENE_BODY_2 + '\\n' +\r\n            Strings.TEXT_INTRO_SCENE_BODY_3 + '\\n';\r\n\r\n        this.bodyText.setStyle({\r\n            fontFamily: 'Assistant',\r\n            fontSize: `${Math.round(48 * this.scaleRatio)}px`,\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.bodyText.initRTL();\r\n        this.bodyText.setText(body);\r\n\r\n        this.bodyText.x = this.titleText.x;\r\n        this.bodyText.y = this.titleText.y + this.titleText.displayHeight + textLineSpacing;\r\n\r\n        this.bottomText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(52 * this.scaleRatio)}px`,\r\n            fill: '#198EC4',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.bottomText.initRTL();\r\n        this.bottomText.setText(Strings.TEXT_INTRO_LAST_LINE);\r\n\r\n        this.bottomText.x = this.bodyText.x;\r\n        this.bottomText.y = this.bodyText.y + this.bodyText.displayHeight - textLineSpacing * 2;\r\n\r\n        // buttons\r\n        this.playButton.setScale(this.scaleRatio);\r\n\r\n        this.playButton.x = this.platform.x + this.platform.displayWidth - this.playButton.displayWidth - horizontalPadding;\r\n        this.playButton.y = this.platform.displayHeight + this.platform.y - this.playButton.displayHeight;\r\n    }\r\n\r\n    layoutMobileLandscape() {\r\n        const scale = (this.gameHeight / this.platform.height);\r\n\r\n        // platform\r\n        this.platform.displayWidth = this.platform.width * scale;\r\n        this.platform.displayHeight = this.platform.height * scale * 1.25;\r\n        this.platform.x = (this.gameWidth - this.platform.displayWidth) * 0.5;\r\n        this.platform.y = (this.gameHeight - this.platform.displayHeight) * 0.4;\r\n\r\n        // top elements\r\n        const topAvailableSpace = 180 * scale * 1.25 + this.platform.y;\r\n        const horizontalPadding = 40 * scale;\r\n        const verticalPadding = 25 * scale;\r\n\r\n        this.gameLogo.setScale(scale);\r\n        this.gameLogo.x =\r\n            this.cameras.main.centerX +\r\n            this.gameLogo.displayWidth * 0.45;\r\n        this.gameLogo.y = topAvailableSpace * 0.5;\r\n\r\n        this.hebrewText.setScale(scale);\r\n        this.hebrewText.x =\r\n            this.cameras.main.centerX -\r\n            this.hebrewText.displayWidth * 0.65;\r\n        this.hebrewText.y = this.gameLogo.y;\r\n\r\n        this.kklLogo.setScale(scale * 0.8);\r\n        this.kklLogo.x =\r\n            this.platform.x +\r\n            this.platform.displayWidth -\r\n            this.kklLogo.displayWidth * 0.5 - horizontalPadding;\r\n        this.kklLogo.y = topAvailableSpace * 0.5;\r\n\r\n        // tetris symbol\r\n        this.tetrisSymbol.setScale(scale * 0.8);\r\n        this.tetrisSymbol.x = this.platform.x + this.tetrisSymbol.displayWidth * 0.5 + horizontalPadding;\r\n        this.tetrisSymbol.y = this.gameHeight - this.tetrisSymbol.displayHeight * 0.5 - verticalPadding;\r\n\r\n        // texts\r\n        const textWidth = this.platform.displayWidth - horizontalPadding * 2;\r\n        const textLineSpacing = 12 * scale;\r\n\r\n        this.titleText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(68 * scale)}px`,\r\n            fontStyle: 'bold',\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.titleText.initRTL();\r\n        this.titleText.setText(Strings.TEXT_INTRO_SCENE_TITLE);\r\n\r\n        this.titleText.x = this.platform.x + this.platform.displayWidth - horizontalPadding;\r\n        this.titleText.y = topAvailableSpace + verticalPadding;\r\n\r\n        const body = Strings.TEXT_INTRO_SCENE_BODY_1 + '\\n' +\r\n            Strings.TEXT_INTRO_SCENE_BODY_2 + '\\n' +\r\n            Strings.TEXT_INTRO_SCENE_BODY_3 + '\\n';\r\n\r\n        this.bodyText.setStyle({\r\n            fontFamily: 'Assistant',\r\n            fontSize: `${Math.round(48 * scale)}px`,\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.bodyText.initRTL();\r\n        this.bodyText.setText(body);\r\n\r\n        this.bodyText.x = this.titleText.x;\r\n        this.bodyText.y = this.titleText.y + this.titleText.displayHeight + textLineSpacing;\r\n\r\n        this.bottomText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(52 * scale)}px`,\r\n            fill: '#198EC4',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.bottomText.initRTL();\r\n        this.bottomText.setText(Strings.TEXT_INTRO_LAST_LINE);\r\n\r\n        this.bottomText.x = this.bodyText.x;\r\n        this.bottomText.y = this.bodyText.y + this.bodyText.displayHeight - textLineSpacing * 2;\r\n\r\n        // buttons\r\n        this.playButton.setScale(scale);\r\n\r\n        this.playButton.x = this.platform.x + this.platform.displayWidth - this.playButton.displayWidth - horizontalPadding;\r\n        this.playButton.y = this.gameHeight - this.playButton.displayHeight;\r\n    }\r\n\r\n    layoutMobilePortrait() {\r\n        const scale = this.scaleRatio;\r\n\r\n        // platform\r\n        this.platform.displayWidth = this.gameWidth * 0.9;\r\n        this.platform.displayHeight = this.gameHeight * 1.25;\r\n        this.platform.x = (this.gameWidth - this.platform.displayWidth) * 0.5;\r\n        this.platform.y = (this.gameHeight - this.platform.displayHeight) * 0.75;\r\n\r\n        // top elements\r\n        const topAvailableSpace = 180 * scale * 0.75;\r\n        const horizontalPadding = 18 * scale;\r\n        const verticalPadding = 18 * scale;\r\n\r\n        this.hebrewText.setScale(scale * 0.6);\r\n        this.hebrewText.x = this.platform.x + this.hebrewText.displayWidth * 0.5 + horizontalPadding;\r\n        this.hebrewText.y = topAvailableSpace * 0.5;\r\n\r\n        this.kklLogo.setScale(scale * 0.7);\r\n        this.kklLogo.x = this.platform.x + this.platform.displayWidth - this.kklLogo.displayWidth * 0.5 - horizontalPadding;\r\n        this.kklLogo.y = topAvailableSpace * 0.5;\r\n\r\n        this.gameLogo.setScale(scale * 0.6);\r\n        this.gameLogo.x = (this.kklLogo.x - this.hebrewText.x) * 0.5 + this.hebrewText.x + horizontalPadding;\r\n        this.gameLogo.y = topAvailableSpace * 0.5;\r\n\r\n        // tetris symbol\r\n        this.tetrisSymbol.setScale(scale * 0.8);\r\n        this.tetrisSymbol.x = this.cameras.main.centerX;\r\n        this.tetrisSymbol.y = this.gameHeight - this.tetrisSymbol.displayHeight * 0.5 - verticalPadding;\r\n\r\n        // texts\r\n        const textWidth = this.platform.displayWidth - horizontalPadding * 2;\r\n        const textLineSpacing = 12 * scale;\r\n\r\n        this.titleText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(72 * scale)}px`,\r\n            fontStyle: 'bold',\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.titleText.initRTL();\r\n        this.titleText.setText(Strings.TEXT_INTRO_SCENE_TITLE);\r\n\r\n        this.titleText.x = this.platform.x + this.platform.displayWidth - horizontalPadding;\r\n        this.titleText.y = topAvailableSpace + verticalPadding * 1.5;\r\n\r\n        const body = Strings.TEXT_INTRO_SCENE_BODY_1 + '\\n' +\r\n            Strings.TEXT_INTRO_SCENE_BODY_2 + '\\n' +\r\n            Strings.TEXT_INTRO_SCENE_BODY_3 + '\\n';\r\n\r\n        this.bodyText.setStyle({\r\n            fontFamily: 'Assistant',\r\n            fontSize: `${Math.round(48 * scale)}px`,\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            }\r\n        });\r\n        this.bodyText.initRTL();\r\n        this.bodyText.setText(body);\r\n\r\n        this.bodyText.x = this.titleText.x;\r\n        this.bodyText.y = this.titleText.y + this.titleText.displayHeight + textLineSpacing;\r\n\r\n        this.bottomText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(52 * scale)}px`,\r\n            fill: '#198EC4',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.bottomText.initRTL();\r\n        this.bottomText.setText(Strings.TEXT_INTRO_LAST_LINE);\r\n\r\n        this.bottomText.x = this.bodyText.x;\r\n        this.bottomText.y = this.bodyText.y + this.bodyText.displayHeight - textLineSpacing * 2;\r\n\r\n        // buttons\r\n        this.playButton.setScale(scale);\r\n\r\n        this.playButton.x = this.cameras.main.centerX;\r\n        this.playButton.y = this.tetrisSymbol.y - this.tetrisSymbol.displayHeight;\r\n    }\r\n}","export default class Block extends Phaser.GameObjects.Container {\r\n    constructor(scene, texture, normalFrame, correctFrame, wrongFrame) {\r\n        super(scene);\r\n\r\n        this._texture = texture;\r\n        this._normalFrame = normalFrame;\r\n        this._correctFrame = correctFrame;\r\n        this._wrongFrame = wrongFrame;\r\n        this._isCorrect = false;\r\n\r\n        this.question = undefined;\r\n        this.id = -1;\r\n        this.column = 0;\r\n        this.row = 0;\r\n\r\n        this.isDropped = false;\r\n    }\r\n\r\n    create() {\r\n        this._animationSprite = this.scene.make.sprite();\r\n        this._animationSprite.x = 0;\r\n        this._animationSprite.visible = false;\r\n        this.add(this._animationSprite);\r\n\r\n        this._background = this.scene.make.image();\r\n        this._background.setTexture(this._texture);\r\n        this._background.setFrame(this._normalFrame);\r\n        this.add(this._background);\r\n\r\n        this._animationSprite.y = -this._background.displayHeight * 0.85;\r\n\r\n        this._wrongFlash = this.scene.make.image();\r\n        this._wrongFlash.setTexture(this._texture);\r\n        this._wrongFlash.setFrame(this._wrongFrame);\r\n        this._wrongFlash.visible = false;\r\n        this.add(this._wrongFlash);\r\n\r\n        this.setSize(this._background.displayWidth, this._background.displayHeight);\r\n\r\n        this._nameText = this.scene.make.text();\r\n        this.add(this._nameText);\r\n\r\n        const textWidth = this.width * 0.95;\r\n\r\n        this._nameText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: '52px',\r\n            fontStyle: 'bold',\r\n            fill: '#2E3192',\r\n            align: 'center',\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            }\r\n        });\r\n        this._nameText.setScale(0.5);\r\n\r\n        this._definitionText = this.scene.make.text();\r\n        this.add(this._definitionText);\r\n        this._definitionText.setScale(0.5);\r\n    }\r\n\r\n    layout() {\r\n        const textWidth = this.width * 0.95;\r\n\r\n        this._nameText.setText(this.question.term);\r\n\r\n        this._nameText.x = -(this._nameText.displayWidth * 0.5) + 2;\r\n\r\n        if (this._definitionText.text && this._definitionText.text.length > 0) {\r\n            const fontFamily = this._isCorrect ? 'AssistantSemiBold' : 'AssistantBold';\r\n            const fontSize = 40;\r\n\r\n            this._definitionText.setStyle({\r\n                fontFamily: fontFamily,\r\n                fontSize: `${fontSize}px`,\r\n                fill: '#2E3192',\r\n                align: 'center',\r\n                fixedWidth: textWidth * 2,\r\n                fixedHeight: 0,\r\n                wordWrap: {\r\n                    width: textWidth * 2,\r\n                }\r\n            });\r\n\r\n            const totalTextHeight = this._nameText.displayHeight + this._definitionText.displayHeight;\r\n            const yPos = (this.height - totalTextHeight) * 0.5 - this.height * 0.5;\r\n\r\n            this._nameText.y = yPos;\r\n\r\n            this._definitionText.x = -(this._definitionText.displayWidth * 0.5) + 2;\r\n            this._definitionText.y = this._nameText.y + this._nameText.displayHeight;\r\n        } else {\r\n            this._nameText.y = -this._nameText.displayHeight * 0.5;\r\n        }\r\n    }\r\n\r\n    checkAnswer(answer) {\r\n        this._isCorrect = answer === this.question.definition;\r\n\r\n        if (this._isCorrect) {\r\n            this._background.setFrame(this._correctFrame);\r\n        } else {\r\n            this.showWrongFrame();\r\n            this.playAnimation('wrong');\r\n        }\r\n\r\n        if (!this.scene.isMobile) {\r\n            this._definitionText.setText(this.question.definition);\r\n        }\r\n\r\n        this.layout();\r\n\r\n        return this._isCorrect;\r\n    }\r\n\r\n    playAnimation(key) {\r\n        this._animationSprite.visible = true;\r\n\r\n        this._animationSprite.play(key);\r\n        this._animationSprite.on('animationcomplete', () => {\r\n            this._animationSprite.visible = false;\r\n        });\r\n    }\r\n\r\n    showWrongFlash() {\r\n        this._wrongFlash.visible = true;\r\n        this._wrongFlash.alpha = 0;\r\n\r\n        if (this._wrongTween) {\r\n            this._wrongTween.destroy();\r\n        }\r\n\r\n        this._wrongTween = this.scene.tweens.add({\r\n            targets: this._wrongFlash,\r\n            alpha: 1,\r\n            duration: 250,\r\n            yoyo: true,\r\n            repeat: -1\r\n        });\r\n    }\r\n\r\n    showWrongFrame() {\r\n        if (this._wrongTween) {\r\n            this._wrongTween.remove();\r\n            this._wrongTween = null;\r\n        }\r\n\r\n        this._wrongFlash.visible = false;\r\n\r\n        this._background.setFrame(this._wrongFrame);\r\n    }\r\n}","import * as Phaser from 'phaser';\nimport Block from './block';\nimport Globals from '../globals';\n\nexport default class GameStage extends Phaser.GameObjects.Container {\n    constructor(scene) {\n        super(scene);\n\n        this._scale = 1;\n        this._isUpdatingLayout = false;\n\n        this._cellWidth = 134;\n        this._cellHeight = 67.5;\n        this._maxColumn = 5;\n        this._maxRow = 11;\n        this._moveDownInterval = 1000;\n        this._nextMoveTime = this.scene.time.now + this._moveDownInterval;\n        this._currentBlock = null;\n        this._numBlocksDropped = 0;\n        this._numCorrectAnswers = 0;\n\n        this._questions = undefined;\n\n        this._grid = [\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n        ];\n\n        this.category = undefined;\n\n        this.bg = new Phaser.GameObjects.Image(\n            this.scene,\n            0,\n            0,\n            'atlas',\n            'game stage.png'\n        );\n        this.add(this.bg);\n        this.setSize(this.bg.width, this.bg.height);\n\n        this.definitionContainer = this.scene.make.container();\n        this.add(this.definitionContainer);\n\n        this.blockContainer = this.scene.make.container();\n        this.add(this.blockContainer);\n\n        this.correctSound = this.scene.sound.add('correctBrick');\n        this.wrongSound = this.scene.sound.add('wrongBrick');\n    }\n\n    get unscaledWidth() {\n        return this.bg.width;\n    }\n\n    get unscaledHeight() {\n        return this.bg.width;\n    }\n\n    get scaleValue() {\n        return this._scale;\n    }\n\n    createQuestions() {\n        if (!this.category) {\n            return;\n        }\n\n        const questions = this.category.questions;\n        this._questions = [];\n\n        while (this._questions.length < 6) {\n            const question = Phaser.Utils.Array.GetRandom(questions);\n\n            if (this._questions.indexOf(question) < 0) {\n                this._questions.push(question);\n            }\n        }\n    }\n\n    createBlocks() {\n        if (!this._questions) {\n            return;\n        }\n\n        this._questions.forEach((question, index) => {\n            const block = new Block(\n                this.scene,\n                'atlas',\n                'in transit block.png',\n                'right block.png',\n                'wrong block.png'\n            );\n            block.create();\n\n            block.question = question;\n            block.id = index + 1;\n            block.column = index;\n            block.row = 0;\n\n            this.blockContainer.add(block);\n        });\n    }\n\n    createDefinitions() {\n        if (!this._questions) {\n            return;\n        }\n\n        const tempArray = this._questions.map(question => question);\n        Phaser.Utils.Array.Shuffle(tempArray);\n\n        const textWidth = 120;\n        const style = {\n            fontFamily: 'AssistantBold',\n            fontSize: '40px',\n            fontStyle: 'bold',\n            fill: '#2E3192',\n            align: 'center',\n            fixedWidth: textWidth * 2,\n            wordWrap: {\n                width: textWidth * 2,\n            }\n        };\n\n        tempArray.forEach(question => {\n            let text = this.scene.make.text();\n            text.setStyle(style);\n            text.setText(question.definition);\n            this.definitionContainer.add(text);\n        });\n    }\n\n    createMask() {\n        this.clearMask(true);\n\n        const rect = this.scene.make.graphics();\n        rect.fillRect(\n            this.x - this.displayWidth * 0.5,\n            this.y - this.displayHeight * 0.5,\n            this.displayWidth,\n            this.displayHeight\n        );\n\n        const geomMask = rect.createGeometryMask();\n        this.setMask(geomMask);\n    }\n\n    layoutBlocks() {\n        const offsetY = 11.5 * this._scale;\n\n        this.blockContainer.getAll().forEach(block => {\n            block.setScale(this._scale);\n            block.layout();\n\n            this.moveBlock(block);\n\n            if (block.y === 0) {\n                block.y -= offsetY;\n            }\n\n            if (block.isDropped) {\n                block.y += this._cellHeight * this._scale;\n            }\n        });\n    }\n\n    layoutDefinitions() {\n        const textScale = 0.5;\n        const availableTextHeightSpace = 100 * this._scale;\n\n        this.definitionContainer.getAll().forEach((text, index) => {\n            text.setScale(this._scale * textScale);\n\n            text.x = index * this._cellWidth * this._scale - text.displayWidth * 0.5 + 2;\n            text.y = this.displayHeight - availableTextHeightSpace * 0.5 - text.displayHeight * 0.5;\n        });\n    }\n\n    moveBlock(block) {\n        block.x = block.column * this._cellWidth * this._scale;\n        block.y = block.row * this._cellHeight * this._scale;\n    }\n\n    moveBlockRight() {\n        if (Globals.isGamePaused) {\n            return;\n        }\n\n        if (this._currentBlock) {\n            const cell = this._grid[this._currentBlock.row][this._currentBlock.column + 1];\n\n            if (cell !== undefined && cell > 0) {\n                return;\n            }\n\n            this._currentBlock.column++;\n\n            if (this._currentBlock.column > this._maxColumn) {\n                this._currentBlock.column = this._maxColumn;\n            } else {\n                this._nextMoveTime = this.scene.time.now + this._moveDownInterval * 0.5;\n\n                this.moveBlock(this._currentBlock);\n            }\n        }\n    }\n\n    moveBlockLeft() {\n        if (Globals.isGamePaused) {\n            return;\n        }\n\n        if (this._currentBlock) {\n            const cell = this._grid[this._currentBlock.row][this._currentBlock.column - 1];\n\n            if (cell !== undefined && cell > 0) {\n                return;\n            }\n\n            this._currentBlock.column--;\n\n            if (this._currentBlock.column < 0) {\n                this._currentBlock.column = 0;\n            } else {\n                this._nextMoveTime = this.scene.time.now + this._moveDownInterval * 0.5;\n\n                this.moveBlock(this._currentBlock);\n            }\n        }\n    }\n\n    moveBlockDown() {\n        if (Globals.isGamePaused) {\n            return;\n        }\n\n        if (!this._currentBlock) {\n            return;\n        }\n\n        if (this._grid[this._maxRow][this._currentBlock.column] > 0) {\n            return;\n        }\n\n        this._currentBlock.row = this._maxRow;\n        this._nextMoveTime -= this._moveDownInterval;\n    }\n\n    nextBlock() {\n        const blocks = this.blockContainer.getAll();\n\n        if (this._currentBlock) {\n            this._currentBlock.isDropped = true;\n            this._numBlocksDropped++;\n            this._grid[this._currentBlock.row][this._currentBlock.column] = this._currentBlock.id;\n            this._currentBlock = null;\n\n            if (this._numBlocksDropped === blocks.length) {\n                this.scene.nextRound();\n                return;\n            }\n        }\n\n        let rnd = Phaser.Math.Between(0, blocks.length - 1);\n        let block = blocks[rnd];\n\n        if (!block) {\n            return;\n        }\n\n        while (block.isDropped) {\n            rnd = Phaser.Math.Between(0, blocks.length - 1);\n            block = blocks[rnd];\n        }\n\n        this._nextMoveTime = this.scene.time.now + this._moveDownInterval * 0.5;\n        this._currentBlock = block;\n    }\n\n    checkAnswer() {\n        const answerText = this.definitionContainer.getAt(this._currentBlock.column);\n        const isCorrect = this._currentBlock.checkAnswer(answerText.text);\n\n        if (isCorrect) {\n            this._numCorrectAnswers++;\n\n            // correctTurbine\n            // correctFlag\n            // correctLamp\n            // correctStar\n            // correctSmile\n            // correctLike\n            let animKey;\n\n            switch (this._numCorrectAnswers) {\n                case 1:\n                    animKey = 'correctTurbine';\n                    break;\n                case 2:\n                    animKey = 'correctFlag';\n                    break;\n                case 3:\n                    animKey = 'correctLamp';\n                    break;\n                case 4:\n                    animKey = 'correctStar';\n                    break;\n                case 5:\n                    animKey = 'correctSmile';\n                    break;\n                default:\n                    animKey = 'correctLike';\n            }\n\n            this._currentBlock.playAnimation(animKey);\n            this.correctSound.play();\n            this.scene.addScore();\n        } else {\n            this.wrongSound.play();\n\n            const correctText = this.definitionContainer.getAll().find(text => {\n                return this._currentBlock.question.definition === text.text;\n            });\n\n            const block = this._currentBlock;\n            this.scene.time.delayedCall(1000, () => {\n                this._grid[block.row][block.column] = 0;\n                block.column = this.definitionContainer.getIndex(correctText);\n                this._grid[block.row][block.column] = block.id;\n\n                this.moveBlock(block);\n\n                block.y += this._cellHeight * this._scale;\n            });\n        }\n\n        this.nextBlock();\n    }\n\n    replayRound() {\n        this._nextMoveTime = this.scene.time.now + this._moveDownInterval;\n        this._currentBlock = null;\n        this._numBlocksDropped = 0;\n        this._numCorrectAnswers = 0;\n\n        this._grid = [\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0],\n        ];\n\n        this.definitionContainer.getAll().forEach(text => text.destroy());\n        this.blockContainer.getAll().forEach(block => block.destroy());\n\n        this.createQuestions();\n        this.createDefinitions();\n        this.createBlocks();\n    }\n\n    replayGame() {\n        this.replayRound();\n    }\n\n    nextRound() {\n        this.replayRound();\n    }\n\n    layout(platform) {\n        this._isUpdatingLayout = true;\n\n        if (this.scene.isMobile) {\n            this._scale = this.scene.isDeviceLandscape\n                ? (this.scene.gameHeight * 0.95) / this.bg.height\n                : (this.scene.gameWidth * 0.9) / this.bg.width;\n\n            if (!this.scene.isDeviceLandscape) {\n                if (this._scale >= 0.8) {\n                    this._scale = 0.68;\n                }\n            }\n\n            this.bg.displayWidth = this.bg.width * this._scale;\n            this.bg.displayHeight = this.bg.height * this._scale;\n\n            this.y = this.scene.cameras.main.centerY;\n        } else {\n            this._scale = this.scene.gameHeight / platform.height;\n\n            this.bg.displayWidth = this.bg.width * this._scale;\n            this.bg.displayHeight = this.bg.height * this._scale;\n\n            const topOffset = 50 * this._scale;\n            this.y = this.scene.cameras.main.centerY + topOffset;\n        }\n\n        this.setSize(this.bg.displayWidth, this.bg.displayHeight);\n\n        const containerX = 88 * this._scale;\n        const containerY = -22.5 * this._scale;\n\n        this.blockContainer.x = -(this.displayWidth * 0.5) + containerX;\n        this.blockContainer.y = -(this.displayHeight * 0.5) + containerY;\n\n        this.definitionContainer.x = -(this.displayWidth * 0.5) + containerX;\n        this.definitionContainer.y = -(this.displayHeight * 0.5) + containerY;\n\n        this.x = this.scene.cameras.main.centerX;\n\n        this.createMask();\n        this.layoutBlocks();\n        this.layoutDefinitions();\n\n        this._isUpdatingLayout = false;\n    }\n\n    update() {\n        if (Globals.isGamePaused) {\n            return;\n        }\n\n        if (this._isUpdatingLayout) {\n            return;\n        }\n\n        if (this._currentBlock) {\n            if (this.scene.time.now >= this._nextMoveTime) {\n                this._nextMoveTime = this.scene.time.now + this._moveDownInterval;\n\n                this._currentBlock.row++;\n\n                if (this._currentBlock.row > this._maxRow) {\n                    this._currentBlock.row = this._maxRow;\n                }\n\n                this.moveBlock(this._currentBlock);\n\n                if (this._currentBlock.row === this._maxRow) {\n                    // snap y position\n                    this._currentBlock.y += this._cellHeight * this._scale;\n\n                    let col = this._currentBlock.column;\n                    let row = this._currentBlock.row;\n\n                    if (this._grid[row][col] > 0) {\n                        while (this._grid[row][col] > 0) {\n                            col++\n                            if (col > this._maxColumn) {\n                                col = this._currentBlock.column;\n                                break;\n                            }\n                        }\n\n                        if (col === this._currentBlock.column) {\n                            while (this._grid[row][col] > 0) {\n                                col--;\n                                if (col < 0) {\n                                    // cannot find an empty column\n                                    return;\n                                }\n                            }\n                        }\n\n                        this._currentBlock.column = col;\n\n                        this.moveBlock(this._currentBlock);\n                        this._currentBlock.y += this._cellHeight * this._scale;\n                    }\n\n                    this.checkAnswer();\n                }\n            }\n        }\n    }\n}\n","/**\r\n * TODO:\r\n * * Set a minimum width and height\r\n */\r\nexport default class NineSlice extends Phaser.GameObjects.RenderTexture {\r\n    constructor(scene, config, x = 0, y = 0, width = 32, height = 32) {\r\n        super(scene, x, y, width, height);\r\n\r\n        this._texture = config.texture;\r\n        this._frame = config.frame;\r\n        this._sourceWidth = config.sourceWidth;\r\n        this._sourceHeight = config.sourceHeight;\r\n        this._top = config.top;\r\n        this._right = config.right;\r\n        this._bottom = config.bottom;\r\n        this._left = config.left;\r\n\r\n        this.setOrigin(0.5);\r\n        this._slice();\r\n        this.setSize9Slice(this.width, this.height);\r\n    }\r\n\r\n    get sourceWidth() {\r\n        return this._sourceWidth;\r\n    }\r\n\r\n    get sourceHeight() {\r\n        return this._sourceHeight;\r\n    }\r\n\r\n    _slice() {\r\n        this._tl = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._left,\r\n            this._top\r\n        );\r\n        this._tl.drawFrame(this._texture, this._frame);\r\n\r\n        this._l = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._left,\r\n            this._sourceHeight - this._top - this._bottom\r\n        );\r\n        this._l.drawFrame(this._texture, this._frame, 0, -this._top);\r\n\r\n        this._bl = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._left,\r\n            this._sourceHeight - this._bottom\r\n        );\r\n        this._bl.drawFrame(this._texture, this._frame, 0, -(this._l.height + this._top));\r\n\r\n        this._t = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._sourceWidth - this._left - this._right,\r\n            this._top\r\n        );\r\n        this._t.drawFrame(this._texture, this._frame, -this._left, 0);\r\n\r\n        this._c = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._sourceWidth - this._left - this._right,\r\n            this._sourceHeight - this._top - this._bottom\r\n        );\r\n        this._c.drawFrame(this._texture, this._frame, -this._left, -this._top);\r\n\r\n        this._b = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._sourceWidth - this._left - this._right,\r\n            this._bottom\r\n        );\r\n        this._b.drawFrame(this._texture, this._frame, -this._left, -(this._c.height + this._top));\r\n\r\n        this._tr = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._right,\r\n            this._top\r\n        );\r\n        this._tr.drawFrame(this._texture, this._frame, -(this._sourceWidth - this._right), 0);\r\n\r\n        this._r = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._right,\r\n            this._sourceHeight - this._top - this._bottom\r\n        );\r\n        this._r.drawFrame(this._texture, this._frame, -(this._sourceWidth - this._right), -this._top);\r\n\r\n        this._br = new Phaser.GameObjects.RenderTexture(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            this._right,\r\n            this._bottom\r\n        );\r\n        this._br.drawFrame(\r\n            this._texture, this._frame,\r\n            -(this._sourceWidth - this._right),\r\n            -(this._sourceHeight - this._bottom));\r\n    }\r\n\r\n    setSize9Slice(width, height) {\r\n        this.setSize(width, height);\r\n        this.clear();\r\n\r\n        // temp background\r\n        // const rect = this.scene.add.rectangle(0, 0, this.width, this.height, 0xff0000, 0.5);\r\n        // rect.visible = false;\r\n        // this.draw(rect, rect.width * 0.5, rect.height * 0.5);\r\n\r\n        // top left\r\n        this.draw(this._tl, 0, 0);\r\n\r\n        // left\r\n        this._l.setScale(1, (this.height - this._top - this._bottom) / this._l.height);\r\n        this.draw(this._l, 0, this._top);\r\n\r\n        // bottom left\r\n        this._bl.setScale(1)\r\n        this.draw(this._bl, 0, this._l.displayHeight + this._top);\r\n\r\n        // top\r\n        this._t.setScale((this.width - this._left - this._right) / this._t.width, 1);\r\n        this.draw(this._t, this._left, 0);\r\n\r\n        // center\r\n        this._c.setScale(\r\n            (this.width - this._left - this._right) / this._c.width,\r\n            (this.height - this._top - this._bottom) / this._c.height\r\n        );\r\n        this.draw(this._c, this._left, this._top);\r\n\r\n        // bottom\r\n        this._b.setScale((this.width - this._left - this._right) / this._b.width, 1);\r\n        this.draw(this._b, this._left, this._c.displayHeight + this._top);\r\n\r\n        // top right\r\n        this.draw(this._tr, this.width - this._right, 0);\r\n\r\n        // right\r\n        this._r.setScale(1, (this.height - this._top - this._bottom) / this._r.height);\r\n        this.draw(this._r, this.width - this._right, this._top);\r\n\r\n        // bottom right\r\n        this.draw(this._br, this.width - this._right, this.height - this._bottom);\r\n    }\r\n}","import * as Phaser from 'phaser';\r\nimport Button from './button';\r\nimport NineSlice from './nine-slice';\r\nimport globals from '../globals';\r\n\r\nexport default class GameLeftPanel extends Phaser.GameObjects.Container {\r\n    constructor(scene) {\r\n        super(scene);\r\n\r\n        this.bg = new NineSlice(\r\n            this.scene,\r\n            {\r\n                texture: 'atlas',\r\n                frame: 'panel bg.png',\r\n                sourceWidth: 194,\r\n                sourceHeight: 869,\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 20,\r\n                left: 20,\r\n            }\r\n        );\r\n        this.add(this.bg);\r\n        this.setSize(this.bg.width, this.bg.height);\r\n\r\n        const btnLabelPadding = 8;\r\n        const btnWidth = 181;\r\n        const btnLabelStyle = {\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: '50px',\r\n            fill: '#2E3192',\r\n            align: 'center',\r\n            fixedWidth: (btnWidth - btnLabelPadding * 2) * 2,\r\n            wordWrap: {\r\n                width: (btnWidth - btnLabelPadding * 2) * 2,\r\n            }\r\n        };\r\n\r\n        this.replayRoundBtn = new Button(\r\n            this.scene,\r\n            'button bg.png',\r\n            'button bg-2.png',\r\n            'סיבוב חדש',\r\n            btnLabelStyle\r\n        );\r\n        this.add(this.replayRoundBtn);\r\n        this.replayRoundBtn.on('pointerup', () => {\r\n            this.resumeGame();\r\n            this.scene.replayRound();\r\n        });\r\n\r\n        this.replayGameBtn = new Button(\r\n            this.scene,\r\n            'button bg.png',\r\n            'button bg-2.png',\r\n            'משחק חדש',\r\n            btnLabelStyle\r\n        );\r\n        this.add(this.replayGameBtn);\r\n        this.replayGameBtn.on('pointerup', () => {\r\n            this.resumeGame();\r\n            this.scene.replayGame();\r\n        });\r\n\r\n        this.endGameBtn = new Button(\r\n            this.scene,\r\n            'button bg.png',\r\n            'button bg-2.png',\r\n            'סיום משחק',\r\n            btnLabelStyle\r\n        );\r\n        this.add(this.endGameBtn);\r\n        this.endGameBtn.on('pointerup', () => {\r\n            this.resumeGame();\r\n            this.scene.endGame();\r\n        });\r\n\r\n        this.toggleSoundBtn = this.scene.make.sprite({\r\n            x: 0,\r\n            y: 0,\r\n            key: 'atlasNew',\r\n            frame: globals.isMute ? 'sound off.png' : 'sound on.png'\r\n        });\r\n        this.add(this.toggleSoundBtn);\r\n        this.toggleSoundBtn.setInteractive();\r\n        this.toggleSoundBtn.on('pointerup', () => {\r\n            if (globals.isGamePaused) {\r\n                return;\r\n            }\r\n\r\n            globals.isMute = !globals.isMute;\r\n\r\n            this.scene.sound.setMute(globals.isMute);\r\n            this.toggleSoundBtn.setFrame(globals.isMute ? 'sound off.png' : 'sound on.png');\r\n        });\r\n\r\n        this.pauseGameBtn = this.scene.make.sprite({\r\n            x: 0,\r\n            y: 0,\r\n            key: 'atlasNew',\r\n            frame: 'pause.png'\r\n        });\r\n        this.add(this.pauseGameBtn);\r\n        this.pauseGameBtn.setInteractive();\r\n        this.pauseGameBtn.on('pointerup', () => {\r\n            globals.isGamePaused = !globals.isGamePaused;\r\n\r\n            this.pauseGameBtn.setFrame(globals.isGamePaused ? 'play.png' : 'pause.png');\r\n\r\n            if (globals.isGamePaused) {\r\n                this.pauseGameBtn.setFrame('play.png');\r\n                this.scene.sound.setMute(true);\r\n            } else {\r\n                this.pauseGameBtn.setFrame('pause.png');\r\n\r\n                if (!globals.isMute) {\r\n                    this.scene.sound.setMute(false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    resumeGame() {\r\n        globals.isGamePaused = false;\r\n        this.pauseGameBtn.setFrame('pause.png');\r\n\r\n        if (!globals.isMute) {\r\n            this.scene.sound.setMute(false);\r\n        }\r\n    }\r\n\r\n    layout(gameStage, platform) {\r\n        if (!gameStage || !platform) {\r\n            return;\r\n        }\r\n\r\n        if (this.scene.isMobile) {\r\n            if (this.scene.isDeviceLandscape) {\r\n                const availableSpace = gameStage.x - gameStage.displayWidth * 0.5 - platform.x;\r\n                let newWidth = gameStage.displayWidth * 0.35;\r\n\r\n                this.bg.setSize9Slice(newWidth, gameStage.displayHeight);\r\n                this.setSize(this.bg.displayWidth, this.bg.displayHeight);\r\n                this.layoutLandscape(\r\n                    (this.bg.displayWidth / this.bg.sourceWidth) * 0.9,\r\n                    platform,\r\n                    availableSpace\r\n                );\r\n            } else {\r\n                const availableSpace =\r\n                    this.scene.gameHeight -\r\n                    (gameStage.y + gameStage.displayHeight * 0.5);\r\n                // let newHeight = availableSpace < 100 ? availableSpace : availableSpace * 0.9;\r\n                let newHeight = gameStage.displayHeight * 0.4;\r\n\r\n                this.bg.setSize9Slice(gameStage.displayWidth, newHeight);\r\n                this.setSize(this.bg.displayWidth, this.bg.displayHeight);\r\n                this.layoutPortrait(this.scene.scaleRatio * 0.9, gameStage, availableSpace);\r\n            }\r\n        } else {\r\n            const scale = this.scene.gameHeight / platform.height;\r\n\r\n            this.bg.setSize9Slice(\r\n                this.bg.sourceWidth * scale,\r\n                this.bg.sourceHeight * scale);\r\n\r\n            const availableSpace =\r\n                gameStage.x - gameStage.displayWidth * 0.5 - platform.x;\r\n\r\n            this.setSize(this.bg.displayWidth, this.bg.displayHeight);\r\n            this.layoutLandscape(scale, platform, availableSpace);\r\n\r\n            const topOffset = 50 * scale;\r\n            this.y = this.scene.cameras.main.centerY + topOffset;\r\n        }\r\n    }\r\n\r\n    layoutLandscape(scale, platform, availableSpace) {\r\n        this.x = platform.x + availableSpace * 0.5;\r\n        this.y = this.scene.cameras.main.centerY;\r\n\r\n        // BUTTONS\r\n        const btnVerticalSpacing = 4 * scale;\r\n\r\n        this.replayRoundBtn.setScale(scale);\r\n\r\n        this.replayRoundBtn.x = 0;\r\n        this.replayRoundBtn.y =\r\n            -(this.height * 0.5) +\r\n            this.replayRoundBtn.displayHeight * 0.5 +\r\n            btnVerticalSpacing * 3;;\r\n\r\n        this.replayGameBtn.setScale(scale);\r\n\r\n        this.replayGameBtn.x = 0;\r\n        this.replayGameBtn.y =\r\n            this.replayRoundBtn.y +\r\n            this.replayGameBtn.displayHeight +\r\n            btnVerticalSpacing;\r\n\r\n        this.endGameBtn.setScale(scale);\r\n\r\n        this.endGameBtn.x = 0;\r\n        this.endGameBtn.y =\r\n            this.replayGameBtn.y +\r\n            this.endGameBtn.displayHeight +\r\n            btnVerticalSpacing;\r\n\r\n        this.toggleSoundBtn.setScale(scale);\r\n\r\n        this.toggleSoundBtn.x = 0;\r\n        this.toggleSoundBtn.y = this.displayHeight * 0.5 - this.toggleSoundBtn.displayHeight * 0.5 - btnVerticalSpacing * 6;\r\n\r\n        this.pauseGameBtn.setScale(scale);\r\n\r\n        this.pauseGameBtn.x = this.toggleSoundBtn.x;\r\n        this.pauseGameBtn.y = this.toggleSoundBtn.y - this.pauseGameBtn.displayHeight - btnVerticalSpacing * 6;\r\n    }\r\n\r\n    layoutPortrait(scale, gameStage, availableSpace) {\r\n        this.x = gameStage.x;\r\n        this.y = availableSpace * 0.5;\r\n\r\n        // BUTTONS\r\n        this.toggleSoundBtn.setScale(scale);\r\n\r\n        const btnSpacing = (this.height - this.toggleSoundBtn.displayHeight * 2) / 3;\r\n\r\n        this.toggleSoundBtn.x = this.bg.x - this.bg.displayWidth * 0.5 + this.toggleSoundBtn.displayWidth * 0.5 + btnSpacing;\r\n        this.toggleSoundBtn.y = this.bg.y + this.bg.displayHeight * 0.5 - this.toggleSoundBtn.displayHeight * 0.5 - btnSpacing;\r\n\r\n        this.pauseGameBtn.setScale(scale);\r\n\r\n        this.pauseGameBtn.x = this.toggleSoundBtn.x;\r\n        this.pauseGameBtn.y = this.toggleSoundBtn.y - this.pauseGameBtn.displayHeight - btnSpacing;\r\n\r\n        this.replayRoundBtn.setScale(scale);\r\n\r\n        this.replayRoundBtn.x = this.width * 0.5 - this.replayRoundBtn.displayWidth * 0.5 - btnSpacing;\r\n        this.replayRoundBtn.y = this.pauseGameBtn.y;\r\n\r\n        this.replayGameBtn.setScale(scale);\r\n\r\n        this.replayGameBtn.x = this.replayRoundBtn.x;\r\n        this.replayGameBtn.y = this.replayRoundBtn.y + this.replayGameBtn.displayHeight + btnSpacing;\r\n\r\n        this.endGameBtn.setScale(scale);\r\n\r\n        this.endGameBtn.x = this.replayRoundBtn.x - this.endGameBtn.displayWidth - btnSpacing;\r\n        this.endGameBtn.y = this.replayRoundBtn.y;\r\n    }\r\n}\r\n","import * as Phaser from 'phaser';\nimport Button from './button';\nimport NineSlice from './nine-slice';\n\nexport default class GameRightPanel extends Phaser.GameObjects.Container {\n    constructor(scene) {\n        super(scene);\n\n        this.bg = new NineSlice(\n            this.scene,\n            {\n                texture: 'atlas',\n                frame: 'panel bg.png',\n                sourceWidth: 194,\n                sourceHeight: 869,\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20,\n            }\n        );\n        this.add(this.bg);\n        this.setSize(this.bg.width, this.bg.height);\n\n        this.dataBg = new Phaser.GameObjects.Image(\n            this.scene,\n            0,\n            0,\n            'atlas',\n            'data bg.png'\n        );\n        this.add(this.dataBg);\n\n        this.dataBgSingle = new NineSlice(\n            this.scene,\n            {\n                texture: 'atlas',\n                frame: 'data_bg_single.png',\n                sourceWidth: 174,\n                sourceHeight: 110,\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20,\n            }\n        );\n        this.add(this.dataBgSingle);\n\n        this.createTexts();\n\n        this.downArrowBtn = this.scene.make.sprite({\n            key: 'atlasNew',\n            frame: 'down button.png'\n        });\n        this.downArrowBtn.setInteractive();\n        this.add(this.downArrowBtn);\n\n        this.leftArrowBtn = this.scene.make.sprite({\n            key: 'atlasNew',\n            frame: 'left button.png'\n        });\n        this.leftArrowBtn.setInteractive();\n        this.add(this.leftArrowBtn);\n\n        this.rightArrowBtn = this.scene.make.sprite({\n            key: 'atlasNew',\n            frame: 'right button.png'\n        });\n        this.rightArrowBtn.setInteractive();\n        this.add(this.rightArrowBtn);\n    }\n\n    createTexts() {\n        const labelStyle = {\n            fontFamily: 'Assistant',\n            fontSize: '48px',\n            fill: '#666666',\n            rtl: true\n        };\n\n        const valueStyle = {\n            fontFamily: 'AssistantBold',\n            fontSize: '74px',\n            fontStyle: 'bold',\n            fill: '#2E3192',\n            rtl: true\n        };\n\n        this.roundLabel = new Phaser.GameObjects.Text(\n            this.scene,\n            0,\n            0,\n            `סיבוב ${2} מתוך ${4}`,\n            labelStyle\n        );\n        this.add(this.roundLabel);\n\n        this.categoryNameLabel = new Phaser.GameObjects.Text(\n            this.scene,\n            0,\n            0,\n            'אישים',\n            valueStyle\n        );\n        this.add(this.categoryNameLabel);\n\n        this.roundScoreLabel = new Phaser.GameObjects.Text(\n            this.scene,\n            0,\n            0,\n            'ניקוד בסיבוב הזה',\n            labelStyle\n        );\n        this.add(this.roundScoreLabel);\n\n        this.roundScoreValue = new Phaser.GameObjects.Text(\n            this.scene,\n            0,\n            0,\n            '0',\n            valueStyle\n        );\n        this.add(this.roundScoreValue);\n\n        this.totalScoreLabel = new Phaser.GameObjects.Text(\n            this.scene,\n            0,\n            0,\n            'ניקוד מצטבר',\n            labelStyle\n        );\n        this.add(this.totalScoreLabel);\n\n        this.totalScoreValue = new Phaser.GameObjects.Text(\n            this.scene,\n            0,\n            0,\n            '0',\n            valueStyle\n        );\n        this.add(this.totalScoreValue);\n    }\n\n    layout(gameStage, platform) {\n        if (!gameStage || !platform) {\n            return;\n        }\n\n        if (this.scene.isMobile) {\n            if (this.scene.isDeviceLandscape) {\n                const availableSpace = platform.x + platform.displayWidth - (gameStage.x + gameStage.displayWidth * 0.5);\n                let newWidth = gameStage.displayWidth * 0.35;\n\n                this.bg.setSize9Slice(newWidth, gameStage.displayHeight);\n                this.setSize(this.bg.displayWidth, this.bg.displayHeight);\n\n                let scale = (this.bg.displayWidth / this.bg.sourceWidth) * 0.9;\n                if (scale > 0.6) {\n                    scale = 0.6;\n                }\n\n                this.layoutLandscape(\n                    scale,\n                    gameStage,\n                    availableSpace\n                );\n            } else {\n                const availableSpace = gameStage.y - gameStage.displayHeight * 0.5;\n                let newHeight = gameStage.displayHeight * 0.4;\n\n                this.bg.setSize9Slice(gameStage.displayWidth, newHeight);\n                this.setSize(this.bg.displayWidth, this.bg.displayHeight);\n                this.layoutPortrait(this.scene.scaleRatio, gameStage, availableSpace);\n            }\n        } else {\n            const scale = this.scene.gameHeight / platform.height;\n\n            this.bg.setSize9Slice(\n                this.bg.sourceWidth * scale,\n                this.bg.sourceHeight * scale);\n\n            const availableSpace = platform.x + platform.displayWidth - (gameStage.x + gameStage.displayWidth * 0.5);\n\n            this.setSize(this.bg.displayWidth, this.bg.displayHeight);\n            this.layoutLandscape(scale, gameStage, availableSpace);\n\n            const topOffset = 50 * scale;\n            this.y = this.scene.cameras.main.centerY + topOffset;\n        }\n    }\n\n    layoutLandscape(scale, gameStage, availableSpace) {\n        this.x = gameStage.x + gameStage.displayWidth * 0.5 + availableSpace * 0.5;\n        this.y = this.scene.cameras.main.centerY;\n\n        const topMargin = 16 * scale;\n\n        this.dataBg.setScale(scale);\n\n        this.dataBg.x = 0;\n        this.dataBg.y =\n            -(this.height * 0.5) + this.dataBg.displayHeight * 0.5 + topMargin;\n\n        this.dataBg.visible = true;\n        this.dataBgSingle.visible = false;\n\n        this.dataBgSingle.setSize9Slice(this.dataBgSingle.sourceWidth, this.dataBgSingle.sourceHeight);\n\n        // TEXTS\n        const labelPadding = 8 * scale;\n        const labelTopMargin = 28 * scale;\n        const valueTopMargin = 8 * scale;\n        const textScale = 0.5;\n\n        // ROUND INFO\n        this.roundLabel.setScale(scale * textScale);\n\n        this.roundLabel.x = this.roundLabel.displayWidth * 0.5;\n        this.roundLabel.y =\n            -(this.height * 0.5) + labelTopMargin + labelPadding;\n\n        this.categoryNameLabel.setScale(scale * textScale);\n\n        this.categoryNameLabel.x = this.categoryNameLabel.displayWidth * 0.5;\n        this.categoryNameLabel.y =\n            this.roundLabel.y + this.roundLabel.displayHeight + valueTopMargin;\n\n        // SCORE\n        this.roundScoreLabel.setScale(scale * textScale);\n\n        this.roundScoreLabel.x = this.roundScoreLabel.displayWidth * 0.5;\n        this.roundScoreLabel.y =\n            -(this.height * 0.5) + labelTopMargin + labelPadding + 128 * scale;\n\n        this.roundScoreValue.setScale(scale * textScale);\n\n        this.roundScoreValue.x = this.roundScoreValue.displayWidth * 0.5;\n        this.roundScoreValue.y =\n            this.roundScoreLabel.y +\n            this.roundScoreLabel.displayHeight +\n            valueTopMargin;\n\n        // TOTAL SCORE\n        this.totalScoreLabel.setScale(scale * textScale);\n\n        this.totalScoreLabel.x = this.totalScoreLabel.displayWidth * 0.5;\n        this.totalScoreLabel.y =\n            -(this.height * 0.5) + labelTopMargin + labelPadding + 256 * scale;\n\n        this.totalScoreValue.setScale(scale * textScale);\n\n        this.totalScoreValue.x = this.totalScoreValue.displayWidth * 0.5;\n        this.totalScoreValue.y =\n            this.totalScoreLabel.y +\n            this.totalScoreLabel.displayHeight +\n            valueTopMargin;\n\n        // BUTTONS\n        this.downArrowBtn.setScale(scale * (this.scene.isMobile ? 1 : 0.8));\n        this.downArrowBtn.x = 0;\n        this.downArrowBtn.y = this.height * 0.5 - this.downArrowBtn.displayHeight * 0.5 - valueTopMargin * 2;\n\n        this.leftArrowBtn.setScale(scale * (this.scene.isMobile ? 1 : 0.8));\n        this.leftArrowBtn.x =\n            -(this.width * 0.5) +\n            this.leftArrowBtn.displayWidth * 0.5 +\n            labelPadding * 2;\n        this.leftArrowBtn.y = this.downArrowBtn.y - this.downArrowBtn.displayHeight - valueTopMargin * 2;\n\n        this.rightArrowBtn.setScale(scale * (this.scene.isMobile ? 1 : 0.8));\n        this.rightArrowBtn.x =\n            this.width * 0.5 -\n            this.rightArrowBtn.displayWidth * 0.5 -\n            labelPadding * 2;\n        this.rightArrowBtn.y = this.leftArrowBtn.y;\n    }\n\n    layoutPortrait(scale, gameStage, availableSpace) {\n        this.x = gameStage.x;\n        this.y =\n            (availableSpace - this.height) * 0.5 +\n            gameStage.y +\n            gameStage.displayHeight * 0.5 +\n            this.height * 0.5;\n\n        this.dataBg.visible = false;\n        this.dataBgSingle.visible = true;\n\n        this.dataBgSingle.setSize9Slice(\n            this.width * 0.55,\n            this.height * 0.9);\n\n        const dataBgPadding = this.height - this.dataBgSingle.displayHeight;\n\n        this.dataBgSingle.x =\n            this.width * 0.5 -\n            this.dataBgSingle.displayWidth * 0.5 -\n            dataBgPadding * 0.5;\n\n        // BUTTONS\n        this.rightArrowBtn.setScale(scale);\n\n        const btnAvailableSpace = this.width - this.dataBgSingle.displayWidth - dataBgPadding;\n        const btnSpacing = (btnAvailableSpace - this.rightArrowBtn.displayWidth * 2) / 3;\n        const btnMargin = 12 * scale;\n\n        this.downArrowBtn.setScale(scale);\n        this.downArrowBtn.x = (this.bg.x - this.bg.displayWidth * 0.5) + btnAvailableSpace * 0.5 + 6;\n        this.downArrowBtn.y = this.bg.y + this.bg.displayHeight * 0.5 - this.downArrowBtn.displayHeight * 0.5 - btnMargin;\n\n        this.rightArrowBtn.x = this.dataBgSingle.x - this.dataBgSingle.displayWidth * 0.5 - this.rightArrowBtn.displayWidth * 0.5 - btnSpacing - 2;\n        this.rightArrowBtn.y = this.downArrowBtn.y - this.rightArrowBtn.displayHeight;\n\n        this.leftArrowBtn.setScale(scale);\n        this.leftArrowBtn.x = this.rightArrowBtn.x - this.rightArrowBtn.displayWidth - btnSpacing;\n        this.leftArrowBtn.y = this.rightArrowBtn.y;\n\n        // TEXTS\n        const labelPadding = 8 * scale;\n        const textScale = 0.5;\n        const labelScale = scale * 1.1 * textScale;\n        const valueScale = scale * 0.78 * textScale;\n\n        this.roundLabel.setScale(labelScale);\n\n        const textVerticalSpacing = (this.height - dataBgPadding - this.roundLabel.displayHeight * 3) / 4;\n\n        this.roundLabel.x = this.width * 0.5 - dataBgPadding;// - dataBgPadding * 2;\n        this.roundLabel.y = -(this.height * 0.5) + textVerticalSpacing + dataBgPadding * 0.5;\n\n        this.categoryNameLabel.setScale(valueScale);\n\n        this.categoryNameLabel.x =\n            this.roundLabel.x - this.roundLabel.displayWidth - labelPadding;\n        this.categoryNameLabel.y = this.roundLabel.y;\n\n        // score\n        this.roundScoreLabel.setScale(labelScale);\n\n        this.roundScoreLabel.x =\n            this.roundLabel.x;\n        this.roundScoreLabel.y =\n            this.roundLabel.y + this.roundLabel.displayHeight + textVerticalSpacing;\n\n        this.roundScoreValue.setScale(valueScale);\n\n        this.roundScoreValue.x = this.roundScoreLabel.x - this.roundScoreLabel.displayWidth - labelPadding;\n        this.roundScoreValue.y = this.roundScoreLabel.y;\n\n        // total score\n        this.totalScoreLabel.setScale(labelScale);\n\n        this.totalScoreLabel.x = this.roundLabel.x;\n        this.totalScoreLabel.y = this.roundScoreLabel.y + this.roundScoreLabel.displayHeight + textVerticalSpacing;\n\n        this.totalScoreValue.setScale(valueScale);\n\n        this.totalScoreValue.x = this.totalScoreLabel.x - this.totalScoreLabel.displayWidth - labelPadding;\n        this.totalScoreValue.y = this.totalScoreLabel.y;\n    }\n\n    setRoundScore(score) {\n        this.roundScoreValue.setText(score);\n    }\n\n    setTotalScore(score) {\n        this.totalScoreValue.setText(score);\n    }\n\n    setRoundDetails(categoryName, round, totalRounds) {\n        this.categoryNameLabel.setText(categoryName);\n        this.roundLabel.setText(`סיבוב ${round} מתוך ${totalRounds}`)\n    }\n}\n","export default class NextLevelAnimation {\n    /**\n     * \n     * @param {Phaser.Scene} scene \n     */\n    constructor(scene, gameStage) {\n        this.scene = scene;\n        this.gameStage = gameStage;\n\n        const scale = this.gameStage.scaleValue;\n\n        this.character = this.scene.add.sprite(0, 0, 'nextLevelAtlas', 'character');\n        this.character.setScale(0.9 * scale, 0.75 * scale);\n        this.character.x = gameStage.x + 120 * scale;\n        this.character.y = gameStage.y - 50 * scale;\n        this.character.visible = false;\n\n        this.bubble = this.scene.add.sprite(0, 0, 'nextLevelAtlas', 'bubble');\n        this.bubble.setOrigin(1, 1);\n        this.bubble.setScale(0.9 * scale);\n        this.bubble.x = gameStage.x + 40 * scale;\n        this.bubble.y = gameStage.y - 60 * scale;\n        this.bubble.visible = false;\n\n        this.texts = [];\n        this.masks = [];\n    }\n\n    play() {\n        const scale = this.gameStage.scaleValue;\n\n        this.character.visible = true;\n        this.character.setScale(0.1);\n        this.character.setAngle(-45);\n\n        this.bubble.setScale(0.1);\n        this.bubble.visible = false;\n\n        this.scene.tweens.add({\n            targets: this.character,\n            scaleX: 0.9 * scale,\n            scaleY: 0.75 * scale,\n            angle: 0,\n            ease: 'Power4',\n            duration: 250,\n            onComplete: () => {\n                this.bubble.visible = true;\n\n                this.scene.tweens.add({\n                    targets: this.bubble,\n                    scale: 0.9 * scale,\n                    ease: 'Power4',\n                    duration: 250,\n                    onComplete: () => {\n                        this.addTextAnimation(0, 22, -200, 170, 42, 800);\n                        this.addTextAnimation(800, 22, -155, 110, 42, 500);\n                        this.addTextAnimation(1300, -90, -155, 110, 42, 400);\n                        this.addTextAnimation(1700, -205, -155, 88, 42, 200);\n\n                        this.scene.time.delayedCall(2700, () => {\n                            this.scene.tweens.add({\n                                targets: this.character,\n                                alpha: 0,\n                                ease: 'Power0',\n                                duration: 150\n                            });\n\n                            this.scene.tweens.add({\n                                targets: this.bubble,\n                                alpha: 0,\n                                ease: 'Power0',\n                                duration: 150,\n                                onComplete: () => this.cleanUp()\n                            });\n\n                            this.texts.forEach((text) => {\n                                this.scene.tweens.add({\n                                    targets: text,\n                                    alpha: 0,\n                                    ease: 'Power0',\n                                    duration: 150\n                                });\n                            });\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    addTextAnimation(delay, x, y, width, height, duration) {\n        const scale = this.gameStage.scaleValue;\n\n        const shape = this.scene.make.graphics();\n        shape.fillStyle(0xff0000);\n        shape.fillRect(-width * scale, 0, width * scale, height * scale);\n        shape.x = this.gameStage.x + x * scale;\n        shape.y = this.gameStage.y + y * scale;\n        shape.setScale(0, 1);\n        shape.fillWidth = width;\n        shape.fillheight = height;\n        shape.xPos = x;\n        shape.yPos = y;\n\n        this.masks.push(shape);\n\n        const mask = new Phaser.Display.Masks.GeometryMask(this.scene, shape);\n\n        const text = this.scene.add.sprite(0, 0, 'nextLevelAtlas', 'text');\n        text.setScale(0.9 * scale);\n        text.x = (this.bubble.x - this.bubble.displayWidth * 0.5);\n        text.y = this.bubble.y - text.displayHeight - 18 * scale;\n        text.visible = false;\n        text.setMask(mask);\n\n        this.texts.push(text);\n\n        this.scene.time.delayedCall(delay, () => {\n            text.visible = true;\n\n            this.scene.tweens.add({\n                targets: shape,\n                scaleX: 1,\n                ease: 'Power4',\n                duration: duration\n            });\n        });\n    }\n\n    layout() {\n        const scale = this.gameStage.scaleValue;\n\n        this.character.setScale(0.9 * scale, 0.75 * scale);\n        this.character.x = this.gameStage.x + 120 * scale;\n        this.character.y = this.gameStage.y - 50 * scale;\n\n        this.bubble.setScale(0.9 * scale);\n        this.bubble.x = this.gameStage.x + 40 * scale;\n        this.bubble.y = this.gameStage.y - 60 * scale;\n\n        this.masks.forEach((mask) => {\n            mask.x = this.gameStage.x + mask.xPos * scale;\n            mask.y = this.gameStage.y + mask.yPos * scale;\n        });\n\n        this.texts.forEach((text, index) => {\n            text.setScale(0.9 * scale);\n            text.x = (this.bubble.x - this.bubble.displayWidth * 0.5);\n            text.y = this.bubble.y - text.displayHeight - 18 * scale;\n\n            const shape = this.masks[index];\n            const mask = new Phaser.Display.Masks.GeometryMask(this.scene, shape);\n\n            text.setMask(mask);\n        });\n    }\n\n    hide() {\n        this.character.visible = false;\n        this.bubble.visible = false;\n\n        this.texts.forEach((text) => text.visible = false);\n    }\n\n    cleanUp() {\n        this.character.destroy();\n        this.bubble.destroy();\n\n        this.masks.forEach((mask) => mask.destroy());\n        this.texts.forEach((text) => text.destroy());\n\n        this.masks = null;\n        this.texts = null;\n    }\n}","import BaseScene from './base-scene';\r\nimport GameStage from '../objects/game-stage';\r\nimport GameLeftPanel from '../objects/game-left-panel';\r\nimport GameRightPanel from '../objects/game-right-panel';\r\nimport Globals from '../globals';\r\nimport NextLevelAnimation from '../objects/next-level-animation';\r\n\r\nexport default class GameScene extends BaseScene {\r\n    constructor() {\r\n        super('GameScene');\r\n    }\r\n\r\n    create() {\r\n        super.create();\r\n\r\n        Globals.isGameFinished = false;\r\n\r\n        this.background = this.add.image(0, 0, 'atlas', 'bg.png');\r\n\r\n        this.platform = this.add.image(0, 0, 'atlas', 'platform.png');\r\n        this.platform.setOrigin(0, 0);\r\n\r\n        this.gameLogo = this.add.image(0, 0, 'atlas', 'game logo.png');\r\n        this.hebrewText = this.add.image(0, 0, 'atlas', 'hebrew_text.png');\r\n        this.kklLogo = this.add.image(0, 0, 'atlas', 'kkl logo.png');\r\n\r\n        this.gameStage = new GameStage(this);\r\n        this.add.existing(this.gameStage);\r\n\r\n        this.leftPanel = new GameLeftPanel(this);\r\n        this.add.existing(this.leftPanel);\r\n\r\n        this.rightPanel = new GameRightPanel(this);\r\n        this.add.existing(this.rightPanel);\r\n        this.rightPanel.leftArrowBtn.on('pointerup', () => this.gameStage.moveBlockLeft());\r\n        this.rightPanel.rightArrowBtn.on('pointerup', () => this.gameStage.moveBlockRight());\r\n        this.rightPanel.downArrowBtn.on('pointerup', () => this.gameStage.moveBlockDown());\r\n\r\n        this.input.keyboard.on('keyup_LEFT', () => this.gameStage.moveBlockLeft());\r\n        this.input.keyboard.on('keyup_RIGHT', () => this.gameStage.moveBlockRight());\r\n        this.input.keyboard.on('keyup_DOWN', () => this.gameStage.moveBlockDown());\r\n\r\n        const questionsData = this.cache.json.get('questionsData');\r\n        this.gameStage.category = questionsData.categories[Globals.round];\r\n\r\n        this.gameStage.createQuestions();\r\n        this.gameStage.createDefinitions();\r\n        this.gameStage.createBlocks();\r\n\r\n        this.rightPanel.setRoundDetails(this.gameStage.category.name,\r\n            Globals.round + 1,\r\n            questionsData.categories.length);\r\n\r\n        this.createAnimations();\r\n        this.layout();\r\n        setTimeout(() => {\r\n            this.gameStage.nextBlock();\r\n        }, 500);\r\n    }\r\n\r\n    layout() {\r\n        super.layout();\r\n\r\n        // main background\r\n        this.background.setScale(this.scaleRatio);\r\n        this.background.x = this.cameras.main.centerX;\r\n\r\n        const topPadding =\r\n            (this.game.scale.gameSize.height - this.background.displayHeight) *\r\n            0.5;\r\n        this.background.y = this.cameras.main.centerY + Math.abs(topPadding);\r\n\r\n        let platformScale = 1;\r\n\r\n        // platform\r\n        if (this.isMobile) {\r\n            this.platform.displayWidth = this.gameWidth * 0.95;\r\n            this.platform.displayHeight = this.gameHeight * 1.15;\r\n\r\n            this.platform.y = this.gameHeight - this.platform.displayHeight;\r\n        } else {\r\n            platformScale = this.gameHeight / this.platform.height;\r\n            this.platform.displayHeight = this.platform.height * platformScale;\r\n            this.platform.displayWidth = this.platform.width * platformScale;\r\n\r\n            this.platform.y = 0;\r\n        }\r\n\r\n        this.platform.x = (this.gameWidth - this.platform.displayWidth) * 0.5;\r\n\r\n        const logoTopOffset = 55;\r\n        const logoSpacing = 20;\r\n\r\n        this.gameLogo.setScale(platformScale * 0.75);\r\n        this.gameLogo.x =\r\n            this.cameras.main.centerX +\r\n            this.gameLogo.displayWidth * 0.5 +\r\n            logoSpacing * platformScale;\r\n        this.gameLogo.y = this.platform.y + logoTopOffset * platformScale;\r\n        this.gameLogo.visible = !this.isMobile;\r\n\r\n        this.hebrewText.setScale(platformScale * 0.75);\r\n        this.hebrewText.x =\r\n            this.cameras.main.centerX -\r\n            this.hebrewText.displayWidth * 0.5 -\r\n            logoSpacing * platformScale;\r\n        this.hebrewText.y = this.platform.y + logoTopOffset * platformScale;\r\n        this.hebrewText.visible = !this.isMobile;\r\n\r\n        this.kklLogo.setScale(platformScale * 0.75);\r\n        this.kklLogo.x =\r\n            this.platform.x +\r\n            this.platform.displayWidth -\r\n            this.kklLogo.displayWidth * 1.75;\r\n        this.kklLogo.y = this.platform.y + logoTopOffset * platformScale;\r\n        this.kklLogo.visible = !this.isMobile;\r\n\r\n        // game stage\r\n        this.gameStage.layout(this.platform);\r\n\r\n        // panels\r\n        this.leftPanel.layout(this.gameStage, this.platform);\r\n        this.rightPanel.layout(this.gameStage, this.platform);\r\n\r\n        if (this.nextLevelAnimation) {\r\n            this.nextLevelAnimation.layout();\r\n        }\r\n\r\n        if (this.finishAnimation) {\r\n            this.finishAnimation.x = this.gameStage.x;\r\n            this.finishAnimation.y = this.gameStage.y - 40 * this.gameStage.scaleValue;\r\n            this.finishAnimation.setScale(3 * this.gameStage.scaleValue);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.gameStage.update();\r\n    }\r\n\r\n    createAnimations() {\r\n        this.anims.create({ key: 'correctFlag', frames: this.anims.generateFrameNames('correctFlagAtlas', { prefix: 'correct_flag_', end: 32, zeroPad: 5 }) });\r\n        this.anims.create({ key: 'correctLamp', frames: this.anims.generateFrameNames('correctLampAtlas', { prefix: 'correct_lamp_', end: 24, zeroPad: 5 }) });\r\n        this.anims.create({ key: 'correctLike', frames: this.anims.generateFrameNames('correctLikeAtlas', { prefix: 'correct_like_', end: 24, zeroPad: 5 }) });\r\n        this.anims.create({ key: 'correctSmile', frames: this.anims.generateFrameNames('correctSmileAtlas', { prefix: 'correct_smile_', end: 23, zeroPad: 5 }) });\r\n        this.anims.create({ key: 'correctStar', frames: this.anims.generateFrameNames('correctStarAtlas', { prefix: 'correct_star_', end: 23, zeroPad: 5 }) });\r\n        this.anims.create({ key: 'correctTurbine', frames: this.anims.generateFrameNames('correctTurbineAtlas', { prefix: 'correct_turbine_', end: 24, zeroPad: 5 }) });\r\n        this.anims.create({ key: 'finish', frames: this.anims.generateFrameNames('finishAtlas', { prefix: 'finish_', end: 124, zeroPad: 5 }) });\r\n        this.anims.create({ key: 'wrong', frames: this.anims.generateFrameNames('wrongAtlas', { prefix: 'wrong_', end: 19, zeroPad: 5 }) });\r\n    }\r\n\r\n    addScore() {\r\n        Globals.roundScore++;\r\n        Globals.totalScore++;\r\n\r\n        this.rightPanel.setRoundScore(Globals.roundScore);\r\n        this.rightPanel.setTotalScore(Globals.totalScore);\r\n    }\r\n\r\n    replayRound() {\r\n        if (this.nextLevelAnimation) {\r\n            this.nextLevelAnimation.hide();\r\n        }\r\n\r\n        Globals.roundScore = 0;\r\n\r\n        this.rightPanel.setRoundScore(Globals.roundScore);\r\n        this.rightPanel.setTotalScore(Globals.totalScore);\r\n        this.gameStage.replayRound();\r\n        this.gameStage.layout(this.platform);\r\n        this.gameStage.nextBlock();\r\n    }\r\n\r\n    replayGame() {\r\n        if (this.nextLevelAnimation) {\r\n            this.nextLevelAnimation.hide();\r\n        }\r\n\r\n        Globals.totalScore = 0;\r\n        Globals.roundScore = 0;\r\n        Globals.round = 0;\r\n\r\n        const categories = this.cache.json.get('questionsData').categories;\r\n        this.gameStage.category = categories[Globals.round];\r\n\r\n        this.rightPanel.setRoundDetails(this.gameStage.category.name,\r\n            Globals.round + 1,\r\n            categories.length);\r\n        this.rightPanel.layout(this.gameStage, this.platform);\r\n\r\n        this.rightPanel.setRoundScore(Globals.roundScore);\r\n        this.rightPanel.setTotalScore(Globals.totalScore);\r\n\r\n        this.gameStage.replayGame();\r\n        this.gameStage.layout(this.platform);\r\n        this.gameStage.nextBlock();\r\n    }\r\n\r\n    nextRound() {\r\n        Globals.round++;\r\n        const categories = this.cache.json.get('questionsData').categories;\r\n        Globals.roundScore = 0;\r\n\r\n        if (Globals.round >= categories.length) {\r\n            this.finishAnimation = this.add.sprite(0, 0);\r\n            this.finishAnimation.x = this.gameStage.x;\r\n            this.finishAnimation.y = this.gameStage.y - 40 * this.gameStage.scaleValue;\r\n            this.finishAnimation.setScale(3 * this.gameStage.scaleValue);\r\n            this.finishAnimation.play('finish');\r\n            this.finishAnimation.on('animationcomplete', () => {\r\n                this.finishAnimation.destroy();\r\n                this.finishAnimation = null;\r\n\r\n                Globals.isGameFinished = true;\r\n\r\n                this.endGame();\r\n            });\r\n        } else {\r\n            this.nextLevelAnimation = new NextLevelAnimation(this, this.gameStage);\r\n\r\n            this.time.delayedCall(1000, () => this.nextLevelAnimation.play());\r\n\r\n            this.time.delayedCall(3850, () => {\r\n                this.nextLevelAnimation = null;\r\n\r\n                this.gameStage.category = categories[Globals.round];\r\n\r\n                this.rightPanel.setRoundDetails(this.gameStage.category.name,\r\n                    Globals.round + 1,\r\n                    categories.length);\r\n                this.rightPanel.layout(this.gameStage, this.platform);\r\n\r\n                this.rightPanel.setRoundScore(Globals.roundScore);\r\n                this.rightPanel.setTotalScore(Globals.totalScore);\r\n\r\n                this.gameStage.nextRound();\r\n                this.gameStage.layout(this.platform);\r\n                this.gameStage.nextBlock();\r\n            });\r\n        }\r\n    }\r\n\r\n    endGame() {\r\n        this.cleanUp();\r\n        this.scene.stop();\r\n        this.scene.start('EndScene');\r\n    }\r\n}\r\n","import BaseScene from './base-scene';\r\nimport Strings from '../strings';\r\nimport Button from '../objects/button';\r\nimport Constants from '../constants';\r\nimport Globals from '../globals';\r\n\r\nexport default class EndScene extends BaseScene {\r\n    constructor() {\r\n        super('EndScene');\r\n    }\r\n\r\n    create() {\r\n        super.create();\r\n\r\n        this.background = this.add.image(0, 0, 'atlas', 'bg.png');\r\n\r\n        this.platform = this.add.image(0, 0, 'atlas', 'platform_opening.png');\r\n\r\n        this.platform.setOrigin(0, 0);\r\n        this.add.existing(this.platform);\r\n\r\n        // top elements\r\n        this.gameLogo = this.add.image(0, 0, 'atlas', 'game logo.png');\r\n        this.hebrewText = this.add.image(0, 0, 'atlas', 'hebrew_text.png');\r\n        this.kklLogo = this.add.image(0, 0, 'atlas', 'kkl logo.png');\r\n        this.tetrisSymbol = this.add.image(0, 0, 'atlas', 'tetris symbol.png');\r\n\r\n        // texts\r\n        this.titleText = this.add.text();\r\n        this.titleText.setScale(0.5);\r\n\r\n        this.bodyText = this.add.text();\r\n        this.bodyText.setScale(0.5);\r\n        this.bodyText.lineSpacing = 16;\r\n\r\n        // buttons\r\n        const btnLabelPadding = 8;\r\n        const btnWidth = 156;\r\n\r\n        this.joinUsButton = new Button(\r\n            this,\r\n            'Vector Smart Object.png',\r\n            'Vector Smart Object.png',\r\n            'הירשמו לדיוור',\r\n            {\r\n                fontFamily: 'AssistantSemiBold',\r\n                fontSize: '45px',\r\n                fill: '#ffffff',\r\n                align: 'center',\r\n                fixedWidth: (btnWidth - btnLabelPadding * 2) * 2,\r\n                wordWrap: {\r\n                    width: (btnWidth - btnLabelPadding * 2) * 2,\r\n                },\r\n            }\r\n        );\r\n        this.joinUsButton.label.y = -this.joinUsButton.displayHeight * 0.38;\r\n\r\n        this.add.existing(this.joinUsButton);\r\n        this.joinUsButton.on('pointerup', () => {\r\n            window.open(Constants.LINK_GREENWIN_KKL_JOIN_US);\r\n        });\r\n\r\n        this.greenwinLinkButton = new Button(\r\n            this,\r\n            'Vector Smart Object.png',\r\n            'Vector Smart Object.png',\r\n            'לאתר חלון ירוק לצעירים',\r\n            {\r\n                fontFamily: 'AssistantSemiBold',\r\n                fontSize: '42px',\r\n                fill: '#ffffff',\r\n                align: 'center',\r\n                fixedWidth: (btnWidth - btnLabelPadding * 2) * 2,\r\n                wordWrap: {\r\n                    width: (btnWidth - btnLabelPadding * 2) * 2,\r\n                },\r\n            }\r\n        );\r\n        this.greenwinLinkButton.label.y = -this.greenwinLinkButton.displayHeight * 0.48;\r\n\r\n        this.add.existing(this.greenwinLinkButton);\r\n        this.greenwinLinkButton.on('pointerup', () => {\r\n            window.open(Constants.LINK_GREENWIN_KKL);\r\n        });\r\n\r\n        this.replayButton = new Button(\r\n            this,\r\n            'Vector Smart Object.png',\r\n            'Vector Smart Object.png',\r\n            'שחקו שוב',\r\n            {\r\n                fontFamily: 'AssistantSemiBold',\r\n                fontSize: '45px',\r\n                fill: '#ffffff',\r\n                align: 'center',\r\n                fixedWidth: (btnWidth - btnLabelPadding * 2) * 2,\r\n                wordWrap: {\r\n                    width: (btnWidth - btnLabelPadding * 2) * 2,\r\n                },\r\n            }\r\n        );\r\n        this.replayButton.label.y = -this.replayButton.displayHeight * 0.38;\r\n\r\n        this.add.existing(this.replayButton);\r\n        this.replayButton.on('pointerup', () => {\r\n            console.log('replay game');\r\n            this.cleanUp();\r\n            this.scene.stop();\r\n            this.scene.start('GameScene');\r\n        });\r\n\r\n        this.layout();\r\n    }\r\n\r\n    layout() {\r\n        super.layout();\r\n\r\n        this.background.setScale(this.scaleRatio);\r\n        this.background.x = this.cameras.main.centerX;\r\n\r\n        const topPadding =\r\n            (this.game.scale.gameSize.height - this.background.displayHeight) *\r\n            0.5;\r\n        this.background.y = this.cameras.main.centerY + Math.abs(topPadding);\r\n\r\n        if (this.isMobile) {\r\n            if (this.isDeviceLandscape) {\r\n                this.layoutMobileLandscape();\r\n            } else {\r\n                this.layoutMobilePortrait();\r\n            }\r\n        } else {\r\n            this.layoutDestop();\r\n        }\r\n    }\r\n\r\n    layoutDestop() {\r\n        // platform\r\n        this.platform.displayHeight = this.platform.height * this.scaleRatio;\r\n        this.platform.displayWidth = this.platform.width * this.scaleRatio;\r\n\r\n        this.platform.y = 0;\r\n        this.platform.x = (this.gameWidth - this.platform.displayWidth) * 0.5;\r\n\r\n        // top elements\r\n        const topAvailableSpace = 180 * this.scaleRatio;\r\n        const horizontalPadding = 40 * this.scaleRatio;\r\n        const verticalPadding = 25 * this.scaleRatio;\r\n\r\n        this.gameLogo.setScale(this.scaleRatio);\r\n        this.gameLogo.x =\r\n            this.cameras.main.centerX +\r\n            this.gameLogo.displayWidth * 0.45;\r\n        this.gameLogo.y = this.platform.y + topAvailableSpace * 0.5;\r\n\r\n        this.hebrewText.setScale(this.scaleRatio);\r\n        this.hebrewText.x =\r\n            this.cameras.main.centerX -\r\n            this.hebrewText.displayWidth * 0.65;\r\n        this.hebrewText.y = this.gameLogo.y;\r\n\r\n        this.kklLogo.setScale(this.scaleRatio);\r\n        this.kklLogo.x =\r\n            this.platform.x +\r\n            this.platform.displayWidth -\r\n            this.kklLogo.displayWidth * 0.5 - horizontalPadding;\r\n        this.kklLogo.y = this.platform.y + topAvailableSpace * 0.5;\r\n\r\n        // tetris symbol\r\n        this.tetrisSymbol.setScale(this.scaleRatio);\r\n        this.tetrisSymbol.x = this.platform.x + this.tetrisSymbol.displayWidth * 0.5 + horizontalPadding;\r\n        this.tetrisSymbol.y = this.platform.y + this.platform.displayHeight - this.tetrisSymbol.displayHeight * 0.5 - verticalPadding;\r\n\r\n        // texts\r\n        const textWidth = this.platform.displayWidth - horizontalPadding * 2;\r\n        const textLineSpacing = 12 * this.scaleRatio;\r\n        const title = Globals.isGameFinished ? Strings.TEXT_END_SCENE_TITLE : Strings.TEXT_END_SCENE_TITLE_2;\r\n\r\n        this.titleText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(68 * this.scaleRatio)}px`,\r\n            fontStyle: 'bold',\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            }\r\n        });\r\n        this.titleText.initRTL();\r\n        this.titleText.setText(title);\r\n\r\n        this.titleText.x = this.platform.x + this.platform.displayWidth - horizontalPadding;\r\n        this.titleText.y = this.platform.y + topAvailableSpace + verticalPadding;\r\n\r\n        const body = Globals.isGameFinished ?\r\n            Strings.TEXT_END_SCENE_BODY + '\\n' + Strings.TEXT_END_SCENE_BODY_2 :\r\n            Strings.TEXT_END_SCENE_BODY_3 + '\\n' + Strings.TEXT_END_SCENE_BODY_4;\r\n\r\n        this.bodyText.setStyle({\r\n            fontFamily: 'Assistant',\r\n            fontSize: `${Math.round(56 * this.scaleRatio)}px`,\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            }\r\n        });\r\n        this.bodyText.initRTL();\r\n        this.bodyText.setText(body);\r\n\r\n        this.bodyText.x = this.titleText.x;\r\n        this.bodyText.y = this.titleText.y + this.titleText.displayHeight + textLineSpacing;\r\n\r\n        // buttons\r\n        this.joinUsButton.setScale(this.scaleRatio);\r\n\r\n        this.joinUsButton.x = this.cameras.main.centerX;\r\n        this.joinUsButton.y = this.platform.displayHeight + this.platform.y - this.joinUsButton.height * 1.5;\r\n\r\n        this.replayButton.setScale(this.scaleRatio);\r\n\r\n        this.replayButton.x = this.platform.x + this.platform.displayWidth - this.replayButton.width * 0.5 - horizontalPadding;\r\n        this.replayButton.y = this.joinUsButton.y;\r\n\r\n        this.greenwinLinkButton.setScale(this.scaleRatio);\r\n\r\n        this.greenwinLinkButton.x = (this.replayButton.x - this.joinUsButton.x) * 0.5 + this.joinUsButton.x;\r\n        this.greenwinLinkButton.y = this.replayButton.y;\r\n    }\r\n\r\n    layoutMobileLandscape() {\r\n        const scale = (this.gameHeight / this.platform.height);\r\n\r\n        // platform\r\n        this.platform.displayWidth = this.platform.width * scale;\r\n        this.platform.displayHeight = this.platform.height * scale * 1.25;\r\n        this.platform.x = (this.gameWidth - this.platform.displayWidth) * 0.5;\r\n        this.platform.y = (this.gameHeight - this.platform.displayHeight) * 0.4;\r\n\r\n        // top elements\r\n        const topAvailableSpace = 180 * scale * 1.25 + this.platform.y;\r\n        const horizontalPadding = 40 * scale;\r\n        const verticalPadding = 25 * scale;\r\n\r\n        this.gameLogo.setScale(scale);\r\n        this.gameLogo.x =\r\n            this.cameras.main.centerX +\r\n            this.gameLogo.displayWidth * 0.45;\r\n        this.gameLogo.y = topAvailableSpace * 0.5;\r\n\r\n        this.hebrewText.setScale(scale);\r\n        this.hebrewText.x =\r\n            this.cameras.main.centerX -\r\n            this.hebrewText.displayWidth * 0.65;\r\n        this.hebrewText.y = this.gameLogo.y;\r\n\r\n        this.kklLogo.setScale(scale * 0.8);\r\n        this.kklLogo.x =\r\n            this.platform.x +\r\n            this.platform.displayWidth -\r\n            this.kklLogo.displayWidth * 0.5 - horizontalPadding;\r\n        this.kklLogo.y = topAvailableSpace * 0.5;\r\n\r\n        // tetris symbol\r\n        this.tetrisSymbol.setScale(scale * 0.8);\r\n        this.tetrisSymbol.x = this.platform.x + this.tetrisSymbol.displayWidth * 0.5 + horizontalPadding;\r\n        this.tetrisSymbol.y = this.gameHeight - this.tetrisSymbol.displayHeight * 0.5 - verticalPadding;\r\n\r\n        // texts\r\n        const textWidth = this.platform.displayWidth - horizontalPadding * 2;\r\n        const textLineSpacing = 12 * scale;\r\n        const title = Globals.isGameFinished ? Strings.TEXT_END_SCENE_TITLE : Strings.TEXT_END_SCENE_TITLE_2;\r\n\r\n        this.titleText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(68 * scale)}px`,\r\n            fontStyle: 'bold',\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.titleText.initRTL();\r\n        this.titleText.setText(title);\r\n\r\n        this.titleText.x = this.platform.x + this.platform.displayWidth - horizontalPadding;\r\n        this.titleText.y = topAvailableSpace + verticalPadding;\r\n\r\n        const body = Globals.isGameFinished ?\r\n            Strings.TEXT_END_SCENE_BODY + '\\n' + Strings.TEXT_END_SCENE_BODY_2 :\r\n            Strings.TEXT_END_SCENE_BODY_3 + '\\n' + Strings.TEXT_END_SCENE_BODY_4;\r\n\r\n        this.bodyText.setStyle({\r\n            fontFamily: 'Assistant',\r\n            fontSize: `${Math.round(56 * scale)}px`,\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.bodyText.initRTL();\r\n        this.bodyText.setText(body);\r\n\r\n        this.bodyText.x = this.titleText.x;\r\n        this.bodyText.y = this.titleText.y + this.titleText.displayHeight + textLineSpacing;\r\n\r\n        // buttons\r\n        const buttonScale = scale * 1.25;\r\n\r\n        this.joinUsButton.setScale(buttonScale);\r\n\r\n        this.joinUsButton.x = this.tetrisSymbol.x + this.tetrisSymbol.displayWidth * 1.1;\r\n        this.joinUsButton.y = this.gameHeight - this.joinUsButton.height * 0.9;\r\n\r\n        this.replayButton.setScale(buttonScale);\r\n\r\n        this.replayButton.x = this.platform.x + this.platform.displayWidth - this.replayButton.width * 0.5 - horizontalPadding;\r\n        this.replayButton.y = this.joinUsButton.y;\r\n\r\n        this.greenwinLinkButton.setScale(buttonScale);\r\n\r\n        this.greenwinLinkButton.x = (this.replayButton.x - this.joinUsButton.x) * 0.5 + this.joinUsButton.x;\r\n        this.greenwinLinkButton.y = this.replayButton.y;\r\n    }\r\n\r\n    layoutMobilePortrait() {\r\n        var scale = this.scaleRatio;\r\n\r\n        // platform\r\n        this.platform.displayWidth = this.gameWidth * 0.9;\r\n        this.platform.displayHeight = this.gameHeight * 1.25;\r\n        this.platform.x = (this.gameWidth - this.platform.displayWidth) * 0.5;\r\n        this.platform.y = (this.gameHeight - this.platform.displayHeight) * 0.75;\r\n\r\n        // top elements\r\n        const topAvailableSpace = 180 * scale * 0.75;\r\n        const horizontalPadding = 18 * scale;\r\n        const verticalPadding = 18 * scale;\r\n\r\n        this.hebrewText.setScale(scale * 0.6);\r\n        this.hebrewText.x = this.platform.x + this.hebrewText.displayWidth * 0.5 + horizontalPadding;\r\n        this.hebrewText.y = topAvailableSpace * 0.5;\r\n\r\n        this.kklLogo.setScale(scale * 0.7);\r\n        this.kklLogo.x = this.platform.x + this.platform.displayWidth - this.kklLogo.displayWidth * 0.5 - horizontalPadding;\r\n        this.kklLogo.y = topAvailableSpace * 0.5;\r\n\r\n        this.gameLogo.setScale(scale * 0.6);\r\n        this.gameLogo.x = (this.kklLogo.x - this.hebrewText.x) * 0.5 + this.hebrewText.x + horizontalPadding;\r\n        this.gameLogo.y = topAvailableSpace * 0.5;\r\n\r\n        // tetris symbol\r\n        this.tetrisSymbol.setScale(scale * 0.8);\r\n        this.tetrisSymbol.x = this.cameras.main.centerX;\r\n        this.tetrisSymbol.y = this.gameHeight - this.tetrisSymbol.displayHeight * 0.5 - verticalPadding;\r\n\r\n        // texts\r\n        const textWidth = this.platform.displayWidth - horizontalPadding * 2;\r\n        const textLineSpacing = 12 * scale;\r\n        const title = Globals.isGameFinished ? Strings.TEXT_END_SCENE_TITLE : Strings.TEXT_END_SCENE_TITLE_2;\r\n\r\n        this.titleText.setStyle({\r\n            fontFamily: 'AssistantBold',\r\n            fontSize: `${Math.round(72 * scale)}px`,\r\n            fontStyle: 'bold',\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.titleText.initRTL();\r\n        this.titleText.setText(title);\r\n\r\n        this.titleText.x = this.platform.x + this.platform.displayWidth - horizontalPadding;\r\n        this.titleText.y = topAvailableSpace + verticalPadding * 1.5;\r\n\r\n        const body = Globals.isGameFinished ?\r\n            Strings.TEXT_END_SCENE_BODY + '\\n' + Strings.TEXT_END_SCENE_BODY_2 :\r\n            Strings.TEXT_END_SCENE_BODY_3 + '\\n' + Strings.TEXT_END_SCENE_BODY_4;\r\n\r\n        this.bodyText.setStyle({\r\n            fontFamily: 'Assistant',\r\n            fontSize: `${Math.round(56 * scale)}px`,\r\n            fill: '#4D4749',\r\n            rtl: true,\r\n            fixedWidth: textWidth * 2,\r\n            fixedHeight: 0,\r\n            wordWrap: {\r\n                width: textWidth * 2,\r\n            },\r\n        });\r\n        this.bodyText.initRTL();\r\n        this.bodyText.setText(body);\r\n\r\n        this.bodyText.x = this.titleText.x;\r\n        this.bodyText.y = this.titleText.y + this.titleText.displayHeight + textLineSpacing;\r\n\r\n        // buttons\r\n        const buttonScale = scale * 1.1;\r\n\r\n        this.greenwinLinkButton.setScale(buttonScale);\r\n\r\n        this.greenwinLinkButton.x = this.cameras.main.centerX;\r\n        this.greenwinLinkButton.y = this.bodyText.y + this.bodyText.displayHeight + this.greenwinLinkButton.displayHeight * 2 + verticalPadding;\r\n\r\n        this.joinUsButton.setScale(buttonScale);\r\n\r\n        this.joinUsButton.x = this.greenwinLinkButton.x - this.joinUsButton.displayWidth;\r\n        this.joinUsButton.y = this.greenwinLinkButton.y - this.joinUsButton.displayHeight;\r\n        this.replayButton.setScale(buttonScale);\r\n\r\n        this.replayButton.x = this.greenwinLinkButton.x + this.replayButton.displayWidth;\r\n        this.replayButton.y = this.joinUsButton.y;\r\n    }\r\n}","import * as Phaser from 'phaser';\nimport BootScene from './scenes/boot-scene';\nimport IntroScene from './scenes/intro-scene';\nimport GameScene from './scenes/game-scene';\nimport EndScene from './scenes/end-scene';\nimport Constants from './constants';\n\nconst gameConfig = {\n    type: Phaser.CANVAS,\n    width: Constants.GAME_DESIGN_WIDTH,\n    height: Constants.GAME_DESIGN_HEIGHT,\n    parent: 'game',\n    scale: {\n        mode: Phaser.Scale.RESIZE,\n        autoCenter: Phaser.Scale.CENTER_BOTH,\n    },\n    scene: [BootScene, IntroScene, GameScene, EndScene],\n    render: {\n        antialias: true\n    }\n};\n\nwindow.addEventListener('load', () => new Phaser.Game(gameConfig));\n"],"sourceRoot":""}